|ic_tester
IN1 << testing_logic:tl1.IN1
IN2 << testing_logic:tl1.IN2
IN3 << testing_logic:tl1.IN3
IN4 << testing_logic:tl1.IN4
IN5 << testing_logic:tl1.IN5
IN6 << testing_logic:tl1.IN6
IN8 << testing_logic:tl1.IN8
IN9 << testing_logic:tl1.IN9
IN10 << testing_logic:tl1.IN10
IN11 << testing_logic:tl1.IN11
IN12 << testing_logic:tl1.IN12
IN13 << testing_logic:tl1.IN13
OP1 => OP1.IN1
OP2 => OP2.IN1
OP3 => OP3.IN1
OP4 => OP4.IN1
OP5 => OP5.IN1
OP6 => OP6.IN1
OP8 => OP8.IN1
OP9 => OP9.IN1
OP10 => OP10.IN1
OP11 => OP11.IN1
OP12 => OP12.IN1
OP13 => OP13.IN1
pass1 << pass1.DB_MAX_OUTPUT_PORT_TYPE
pass2 << pass2.DB_MAX_OUTPUT_PORT_TYPE
pass3 << pass3.DB_MAX_OUTPUT_PORT_TYPE
pass4 << pass4.DB_MAX_OUTPUT_PORT_TYPE
pass5 << pass5.DB_MAX_OUTPUT_PORT_TYPE
pass6 << pass6.DB_MAX_OUTPUT_PORT_TYPE
fail1 << fail1.DB_MAX_OUTPUT_PORT_TYPE
fail2 << fail2.DB_MAX_OUTPUT_PORT_TYPE
fail3 << fail3.DB_MAX_OUTPUT_PORT_TYPE
fail4 << fail4.DB_MAX_OUTPUT_PORT_TYPE
fail5 << fail5.DB_MAX_OUTPUT_PORT_TYPE
fail6 << fail6.DB_MAX_OUTPUT_PORT_TYPE
pass << pass.DB_MAX_OUTPUT_PORT_TYPE
fail << fail.DB_MAX_OUTPUT_PORT_TYPE
clk => clk.IN4
Rkey => Rkey.IN1
HEX0[0] << Input_Reciver:comb_3.HEX0
HEX0[1] << Input_Reciver:comb_3.HEX0
HEX0[2] << Input_Reciver:comb_3.HEX0
HEX0[3] << Input_Reciver:comb_3.HEX0
HEX0[4] << Input_Reciver:comb_3.HEX0
HEX0[5] << Input_Reciver:comb_3.HEX0
HEX0[6] << Input_Reciver:comb_3.HEX0
HEX1[0] << Input_Reciver:comb_3.HEX1
HEX1[1] << Input_Reciver:comb_3.HEX1
HEX1[2] << Input_Reciver:comb_3.HEX1
HEX1[3] << Input_Reciver:comb_3.HEX1
HEX1[4] << Input_Reciver:comb_3.HEX1
HEX1[5] << Input_Reciver:comb_3.HEX1
HEX1[6] << Input_Reciver:comb_3.HEX1
HEX2[0] << Input_Reciver:comb_3.HEX2
HEX2[1] << Input_Reciver:comb_3.HEX2
HEX2[2] << Input_Reciver:comb_3.HEX2
HEX2[3] << Input_Reciver:comb_3.HEX2
HEX2[4] << Input_Reciver:comb_3.HEX2
HEX2[5] << Input_Reciver:comb_3.HEX2
HEX2[6] << Input_Reciver:comb_3.HEX2
HEX3[0] << Input_Reciver:comb_3.HEX3
HEX3[1] << Input_Reciver:comb_3.HEX3
HEX3[2] << Input_Reciver:comb_3.HEX3
HEX3[3] << Input_Reciver:comb_3.HEX3
HEX3[4] << Input_Reciver:comb_3.HEX3
HEX3[5] << Input_Reciver:comb_3.HEX3
HEX3[6] << Input_Reciver:comb_3.HEX3
LEDR[0] << Input_Reciver:comb_3.LEDR
LEDR[1] << Input_Reciver:comb_3.LEDR
LEDR[2] << Input_Reciver:comb_3.LEDR
LEDR[3] << Input_Reciver:comb_3.LEDR
LEDR[4] << Input_Reciver:comb_3.LEDR
IRDA_RXD => IRDA_RXD.IN1
RLCD => RLCD.IN1
lcd_rs << LCD_DISPLAY:lcddisplay1.lcd_rs
lcd_e << LCD_DISPLAY:lcddisplay1.lcd_e
lcd_rw << LCD_DISPLAY:lcddisplay1.lcd_rw
lcd_on << LCD_DISPLAY:lcddisplay1.lcd_on
lcd_blon << LCD_DISPLAY:lcddisplay1.lcd_blon
data_bus_0 <> LCD_DISPLAY:lcddisplay1.data_bus_0
data_bus_1 <> LCD_DISPLAY:lcddisplay1.data_bus_1
data_bus_2 <> LCD_DISPLAY:lcddisplay1.data_bus_2
data_bus_3 <> LCD_DISPLAY:lcddisplay1.data_bus_3
data_bus_4 <> LCD_DISPLAY:lcddisplay1.data_bus_4
data_bus_5 <> LCD_DISPLAY:lcddisplay1.data_bus_5
data_bus_6 <> LCD_DISPLAY:lcddisplay1.data_bus_6
data_bus_7 <> LCD_DISPLAY:lcddisplay1.data_bus_7


|ic_tester|Input_Reciver:comb_3
CLOCK_50 => CLOCK_50.IN2
KEY => KEY.IN1
HEX0[0] <= HEX0[0].DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= HEX0[1].DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= HEX0[2].DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= HEX0[3].DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= HEX0[4].DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= HEX0[5].DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= HEX0[6].DB_MAX_OUTPUT_PORT_TYPE
HEX1[0] <= HEX1[0].DB_MAX_OUTPUT_PORT_TYPE
HEX1[1] <= HEX1[1].DB_MAX_OUTPUT_PORT_TYPE
HEX1[2] <= HEX1[2].DB_MAX_OUTPUT_PORT_TYPE
HEX1[3] <= HEX1[3].DB_MAX_OUTPUT_PORT_TYPE
HEX1[4] <= HEX1[4].DB_MAX_OUTPUT_PORT_TYPE
HEX1[5] <= HEX1[5].DB_MAX_OUTPUT_PORT_TYPE
HEX1[6] <= HEX1[6].DB_MAX_OUTPUT_PORT_TYPE
HEX2[0] <= HEX2[0].DB_MAX_OUTPUT_PORT_TYPE
HEX2[1] <= HEX2[1].DB_MAX_OUTPUT_PORT_TYPE
HEX2[2] <= HEX2[2].DB_MAX_OUTPUT_PORT_TYPE
HEX2[3] <= HEX2[3].DB_MAX_OUTPUT_PORT_TYPE
HEX2[4] <= HEX2[4].DB_MAX_OUTPUT_PORT_TYPE
HEX2[5] <= HEX2[5].DB_MAX_OUTPUT_PORT_TYPE
HEX2[6] <= HEX2[6].DB_MAX_OUTPUT_PORT_TYPE
HEX3[0] <= HEX3[0].DB_MAX_OUTPUT_PORT_TYPE
HEX3[1] <= HEX3[1].DB_MAX_OUTPUT_PORT_TYPE
HEX3[2] <= HEX3[2].DB_MAX_OUTPUT_PORT_TYPE
HEX3[3] <= HEX3[3].DB_MAX_OUTPUT_PORT_TYPE
HEX3[4] <= HEX3[4].DB_MAX_OUTPUT_PORT_TYPE
HEX3[5] <= HEX3[5].DB_MAX_OUTPUT_PORT_TYPE
HEX3[6] <= HEX3[6].DB_MAX_OUTPUT_PORT_TYPE
LEDR[0] <= IRDA_RXD.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= KEY.DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= data_ready.DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= ic_read.DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= <GND>
IRDA_RXD => IRDA_RXD.IN1
number[0] <= generate_ic_number:gin1.number
number[1] <= generate_ic_number:gin1.number
number[2] <= generate_ic_number:gin1.number
number[3] <= generate_ic_number:gin1.number
number[4] <= generate_ic_number:gin1.number
number[5] <= generate_ic_number:gin1.number
number[6] <= generate_ic_number:gin1.number
number[7] <= generate_ic_number:gin1.number
number[8] <= generate_ic_number:gin1.number
number[9] <= generate_ic_number:gin1.number
number[10] <= generate_ic_number:gin1.number
number[11] <= generate_ic_number:gin1.number
number[12] <= generate_ic_number:gin1.number
number[13] <= generate_ic_number:gin1.number
number[14] <= generate_ic_number:gin1.number
number[15] <= generate_ic_number:gin1.number
number[16] <= generate_ic_number:gin1.number
number[17] <= generate_ic_number:gin1.number
number[18] <= generate_ic_number:gin1.number
number[19] <= generate_ic_number:gin1.number
number[20] <= generate_ic_number:gin1.number
number[21] <= generate_ic_number:gin1.number
number[22] <= generate_ic_number:gin1.number
number[23] <= generate_ic_number:gin1.number
number[24] <= generate_ic_number:gin1.number
number[25] <= generate_ic_number:gin1.number
number[26] <= generate_ic_number:gin1.number
number[27] <= generate_ic_number:gin1.number
number[28] <= generate_ic_number:gin1.number
number[29] <= generate_ic_number:gin1.number
number[30] <= generate_ic_number:gin1.number
number[31] <= generate_ic_number:gin1.number
icg <= generate_ic_number:gin1.ic_no_generated


|ic_tester|Input_Reciver:comb_3|pll1:u0
inclk0 => sub_wire4[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk


|ic_tester|Input_Reciver:comb_3|pll1:u0|altpll:altpll_component
inclk[0] => pll1_altpll:auto_generated.inclk[0]
inclk[1] => pll1_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|ic_tester|Input_Reciver:comb_3|pll1:u0|altpll:altpll_component|pll1_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|ic_tester|Input_Reciver:comb_3|IR_RECEIVE:u1
iCLK => data_ready2~reg0.CLK
iCLK => oDATA[0]~reg0.CLK
iCLK => oDATA[1]~reg0.CLK
iCLK => oDATA[2]~reg0.CLK
iCLK => oDATA[3]~reg0.CLK
iCLK => oDATA[4]~reg0.CLK
iCLK => oDATA[5]~reg0.CLK
iCLK => oDATA[6]~reg0.CLK
iCLK => oDATA[7]~reg0.CLK
iCLK => oDATA[8]~reg0.CLK
iCLK => oDATA[9]~reg0.CLK
iCLK => oDATA[10]~reg0.CLK
iCLK => oDATA[11]~reg0.CLK
iCLK => oDATA[12]~reg0.CLK
iCLK => oDATA[13]~reg0.CLK
iCLK => oDATA[14]~reg0.CLK
iCLK => oDATA[15]~reg0.CLK
iCLK => oDATA[16]~reg0.CLK
iCLK => oDATA[17]~reg0.CLK
iCLK => oDATA[18]~reg0.CLK
iCLK => oDATA[19]~reg0.CLK
iCLK => oDATA[20]~reg0.CLK
iCLK => oDATA[21]~reg0.CLK
iCLK => oDATA[22]~reg0.CLK
iCLK => oDATA[23]~reg0.CLK
iCLK => oDATA[24]~reg0.CLK
iCLK => oDATA[25]~reg0.CLK
iCLK => oDATA[26]~reg0.CLK
iCLK => oDATA[27]~reg0.CLK
iCLK => oDATA[28]~reg0.CLK
iCLK => oDATA[29]~reg0.CLK
iCLK => oDATA[30]~reg0.CLK
iCLK => oDATA[31]~reg0.CLK
iCLK => data_buf[0].CLK
iCLK => data_buf[1].CLK
iCLK => data_buf[2].CLK
iCLK => data_buf[3].CLK
iCLK => data_buf[4].CLK
iCLK => data_buf[5].CLK
iCLK => data_buf[6].CLK
iCLK => data_buf[7].CLK
iCLK => data_buf[8].CLK
iCLK => data_buf[9].CLK
iCLK => data_buf[10].CLK
iCLK => data_buf[11].CLK
iCLK => data_buf[12].CLK
iCLK => data_buf[13].CLK
iCLK => data_buf[14].CLK
iCLK => data_buf[15].CLK
iCLK => data_buf[16].CLK
iCLK => data_buf[17].CLK
iCLK => data_buf[18].CLK
iCLK => data_buf[19].CLK
iCLK => data_buf[20].CLK
iCLK => data_buf[21].CLK
iCLK => data_buf[22].CLK
iCLK => data_buf[23].CLK
iCLK => data_buf[24].CLK
iCLK => data_buf[25].CLK
iCLK => data_buf[26].CLK
iCLK => data_buf[27].CLK
iCLK => data_buf[28].CLK
iCLK => data_buf[29].CLK
iCLK => data_buf[30].CLK
iCLK => data_buf[31].CLK
iCLK => data_ready.CLK
iCLK => data[0].CLK
iCLK => data[1].CLK
iCLK => data[2].CLK
iCLK => data[3].CLK
iCLK => data[4].CLK
iCLK => data[5].CLK
iCLK => data[6].CLK
iCLK => data[7].CLK
iCLK => data[8].CLK
iCLK => data[9].CLK
iCLK => data[10].CLK
iCLK => data[11].CLK
iCLK => data[12].CLK
iCLK => data[13].CLK
iCLK => data[14].CLK
iCLK => data[15].CLK
iCLK => data[16].CLK
iCLK => data[17].CLK
iCLK => data[18].CLK
iCLK => data[19].CLK
iCLK => data[20].CLK
iCLK => data[21].CLK
iCLK => data[22].CLK
iCLK => data[23].CLK
iCLK => data[24].CLK
iCLK => data[25].CLK
iCLK => data[26].CLK
iCLK => data[27].CLK
iCLK => data[28].CLK
iCLK => data[29].CLK
iCLK => data[30].CLK
iCLK => data[31].CLK
iCLK => bitcount[0].CLK
iCLK => bitcount[1].CLK
iCLK => bitcount[2].CLK
iCLK => bitcount[3].CLK
iCLK => bitcount[4].CLK
iCLK => bitcount[5].CLK
iCLK => data_count_flag.CLK
iCLK => data_count[0].CLK
iCLK => data_count[1].CLK
iCLK => data_count[2].CLK
iCLK => data_count[3].CLK
iCLK => data_count[4].CLK
iCLK => data_count[5].CLK
iCLK => data_count[6].CLK
iCLK => data_count[7].CLK
iCLK => data_count[8].CLK
iCLK => data_count[9].CLK
iCLK => data_count[10].CLK
iCLK => data_count[11].CLK
iCLK => data_count[12].CLK
iCLK => data_count[13].CLK
iCLK => data_count[14].CLK
iCLK => data_count[15].CLK
iCLK => data_count[16].CLK
iCLK => data_count[17].CLK
iCLK => state_count_flag.CLK
iCLK => state_count[0].CLK
iCLK => state_count[1].CLK
iCLK => state_count[2].CLK
iCLK => state_count[3].CLK
iCLK => state_count[4].CLK
iCLK => state_count[5].CLK
iCLK => state_count[6].CLK
iCLK => state_count[7].CLK
iCLK => state_count[8].CLK
iCLK => state_count[9].CLK
iCLK => state_count[10].CLK
iCLK => state_count[11].CLK
iCLK => state_count[12].CLK
iCLK => state_count[13].CLK
iCLK => state_count[14].CLK
iCLK => state_count[15].CLK
iCLK => state_count[16].CLK
iCLK => state_count[17].CLK
iCLK => idle_count_flag.CLK
iCLK => idle_count[0].CLK
iCLK => idle_count[1].CLK
iCLK => idle_count[2].CLK
iCLK => idle_count[3].CLK
iCLK => idle_count[4].CLK
iCLK => idle_count[5].CLK
iCLK => idle_count[6].CLK
iCLK => idle_count[7].CLK
iCLK => idle_count[8].CLK
iCLK => idle_count[9].CLK
iCLK => idle_count[10].CLK
iCLK => idle_count[11].CLK
iCLK => idle_count[12].CLK
iCLK => idle_count[13].CLK
iCLK => idle_count[14].CLK
iCLK => idle_count[15].CLK
iCLK => idle_count[16].CLK
iCLK => idle_count[17].CLK
iCLK => state~1.DATAIN
iRST_n => data_ready.ACLR
iRST_n => oDATA[0]~reg0.ACLR
iRST_n => oDATA[1]~reg0.ACLR
iRST_n => oDATA[2]~reg0.ACLR
iRST_n => oDATA[3]~reg0.ACLR
iRST_n => oDATA[4]~reg0.ACLR
iRST_n => oDATA[5]~reg0.ACLR
iRST_n => oDATA[6]~reg0.ACLR
iRST_n => oDATA[7]~reg0.ACLR
iRST_n => oDATA[8]~reg0.ACLR
iRST_n => oDATA[9]~reg0.ACLR
iRST_n => oDATA[10]~reg0.ACLR
iRST_n => oDATA[11]~reg0.ACLR
iRST_n => oDATA[12]~reg0.ACLR
iRST_n => oDATA[13]~reg0.ACLR
iRST_n => oDATA[14]~reg0.ACLR
iRST_n => oDATA[15]~reg0.ACLR
iRST_n => oDATA[16]~reg0.ACLR
iRST_n => oDATA[17]~reg0.ACLR
iRST_n => oDATA[18]~reg0.ACLR
iRST_n => oDATA[19]~reg0.ACLR
iRST_n => oDATA[20]~reg0.ACLR
iRST_n => oDATA[21]~reg0.ACLR
iRST_n => oDATA[22]~reg0.ACLR
iRST_n => oDATA[23]~reg0.ACLR
iRST_n => oDATA[24]~reg0.ACLR
iRST_n => oDATA[25]~reg0.ACLR
iRST_n => oDATA[26]~reg0.ACLR
iRST_n => oDATA[27]~reg0.ACLR
iRST_n => oDATA[28]~reg0.ACLR
iRST_n => oDATA[29]~reg0.ACLR
iRST_n => oDATA[30]~reg0.ACLR
iRST_n => oDATA[31]~reg0.ACLR
iRST_n => idle_count[0].ACLR
iRST_n => idle_count[1].ACLR
iRST_n => idle_count[2].ACLR
iRST_n => idle_count[3].ACLR
iRST_n => idle_count[4].ACLR
iRST_n => idle_count[5].ACLR
iRST_n => idle_count[6].ACLR
iRST_n => idle_count[7].ACLR
iRST_n => idle_count[8].ACLR
iRST_n => idle_count[9].ACLR
iRST_n => idle_count[10].ACLR
iRST_n => idle_count[11].ACLR
iRST_n => idle_count[12].ACLR
iRST_n => idle_count[13].ACLR
iRST_n => idle_count[14].ACLR
iRST_n => idle_count[15].ACLR
iRST_n => idle_count[16].ACLR
iRST_n => idle_count[17].ACLR
iRST_n => idle_count_flag.ACLR
iRST_n => state_count[0].ACLR
iRST_n => state_count[1].ACLR
iRST_n => state_count[2].ACLR
iRST_n => state_count[3].ACLR
iRST_n => state_count[4].ACLR
iRST_n => state_count[5].ACLR
iRST_n => state_count[6].ACLR
iRST_n => state_count[7].ACLR
iRST_n => state_count[8].ACLR
iRST_n => state_count[9].ACLR
iRST_n => state_count[10].ACLR
iRST_n => state_count[11].ACLR
iRST_n => state_count[12].ACLR
iRST_n => state_count[13].ACLR
iRST_n => state_count[14].ACLR
iRST_n => state_count[15].ACLR
iRST_n => state_count[16].ACLR
iRST_n => state_count[17].ACLR
iRST_n => state_count_flag.ACLR
iRST_n => data_count[0].ACLR
iRST_n => data_count[1].ACLR
iRST_n => data_count[2].ACLR
iRST_n => data_count[3].ACLR
iRST_n => data_count[4].ACLR
iRST_n => data_count[5].ACLR
iRST_n => data_count[6].ACLR
iRST_n => data_count[7].ACLR
iRST_n => data_count[8].ACLR
iRST_n => data_count[9].ACLR
iRST_n => data_count[10].ACLR
iRST_n => data_count[11].ACLR
iRST_n => data_count[12].ACLR
iRST_n => data_count[13].ACLR
iRST_n => data_count[14].ACLR
iRST_n => data_count[15].ACLR
iRST_n => data_count[16].ACLR
iRST_n => data_count[17].ACLR
iRST_n => data_count_flag.ACLR
iRST_n => bitcount[0].ACLR
iRST_n => bitcount[1].ACLR
iRST_n => bitcount[2].ACLR
iRST_n => bitcount[3].ACLR
iRST_n => bitcount[4].ACLR
iRST_n => bitcount[5].ACLR
iRST_n => data[0].ACLR
iRST_n => data[1].ACLR
iRST_n => data[2].ACLR
iRST_n => data[3].ACLR
iRST_n => data[4].ACLR
iRST_n => data[5].ACLR
iRST_n => data[6].ACLR
iRST_n => data[7].ACLR
iRST_n => data[8].ACLR
iRST_n => data[9].ACLR
iRST_n => data[10].ACLR
iRST_n => data[11].ACLR
iRST_n => data[12].ACLR
iRST_n => data[13].ACLR
iRST_n => data[14].ACLR
iRST_n => data[15].ACLR
iRST_n => data[16].ACLR
iRST_n => data[17].ACLR
iRST_n => data[18].ACLR
iRST_n => data[19].ACLR
iRST_n => data[20].ACLR
iRST_n => data[21].ACLR
iRST_n => data[22].ACLR
iRST_n => data[23].ACLR
iRST_n => data[24].ACLR
iRST_n => data[25].ACLR
iRST_n => data[26].ACLR
iRST_n => data[27].ACLR
iRST_n => data[28].ACLR
iRST_n => data[29].ACLR
iRST_n => data[30].ACLR
iRST_n => data[31].ACLR
iRST_n => state~3.DATAIN
iRST_n => data_buf[31].ENA
iRST_n => data_buf[30].ENA
iRST_n => data_buf[29].ENA
iRST_n => data_buf[28].ENA
iRST_n => data_buf[27].ENA
iRST_n => data_buf[26].ENA
iRST_n => data_buf[25].ENA
iRST_n => data_buf[24].ENA
iRST_n => data_buf[23].ENA
iRST_n => data_buf[22].ENA
iRST_n => data_buf[21].ENA
iRST_n => data_buf[20].ENA
iRST_n => data_buf[19].ENA
iRST_n => data_buf[18].ENA
iRST_n => data_buf[17].ENA
iRST_n => data_buf[16].ENA
iRST_n => data_buf[15].ENA
iRST_n => data_buf[14].ENA
iRST_n => data_buf[13].ENA
iRST_n => data_buf[12].ENA
iRST_n => data_buf[11].ENA
iRST_n => data_buf[10].ENA
iRST_n => data_buf[9].ENA
iRST_n => data_buf[8].ENA
iRST_n => data_buf[7].ENA
iRST_n => data_buf[6].ENA
iRST_n => data_buf[5].ENA
iRST_n => data_buf[4].ENA
iRST_n => data_buf[3].ENA
iRST_n => data_buf[2].ENA
iRST_n => data_buf[1].ENA
iRST_n => data_ready2~reg0.ENA
iRST_n => data_buf[0].ENA
iIRDA => always3.IN0
iIRDA => always5.IN0
iIRDA => always1.IN0
oDATA_READY <= data_ready.DB_MAX_OUTPUT_PORT_TYPE
oDATA[0] <= oDATA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[1] <= oDATA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[2] <= oDATA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[3] <= oDATA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[4] <= oDATA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[5] <= oDATA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[6] <= oDATA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[7] <= oDATA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[8] <= oDATA[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[9] <= oDATA[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[10] <= oDATA[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[11] <= oDATA[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[12] <= oDATA[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[13] <= oDATA[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[14] <= oDATA[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[15] <= oDATA[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[16] <= oDATA[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[17] <= oDATA[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[18] <= oDATA[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[19] <= oDATA[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[20] <= oDATA[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[21] <= oDATA[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[22] <= oDATA[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[23] <= oDATA[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[24] <= oDATA[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[25] <= oDATA[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[26] <= oDATA[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[27] <= oDATA[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[28] <= oDATA[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[29] <= oDATA[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[30] <= oDATA[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[31] <= oDATA[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_ready2 <= data_ready2~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|Input_Reciver:comb_3|State_machine:u2
iCLK => ~NO_FANOUT~
hex_data[0] => ~NO_FANOUT~
hex_data[1] => ~NO_FANOUT~
hex_data[2] => ~NO_FANOUT~
hex_data[3] => ~NO_FANOUT~
hex_data[4] => ~NO_FANOUT~
hex_data[5] => ~NO_FANOUT~
hex_data[6] => ~NO_FANOUT~
hex_data[7] => ~NO_FANOUT~
hex_data[8] => ~NO_FANOUT~
hex_data[9] => ~NO_FANOUT~
hex_data[10] => ~NO_FANOUT~
hex_data[11] => ~NO_FANOUT~
hex_data[12] => ~NO_FANOUT~
hex_data[13] => ~NO_FANOUT~
hex_data[14] => ~NO_FANOUT~
hex_data[15] => ~NO_FANOUT~
hex_data[16] => iDIG.DATAA
hex_data[16] => Equal1.IN2
hex_data[17] => iDIG.DATAA
hex_data[17] => Equal1.IN1
hex_data[18] => iDIG.DATAA
hex_data[18] => Equal1.IN0
hex_data[19] => iDIG.DATAA
hex_data[19] => Equal1.IN3
hex_data[20] => Equal0.IN0
hex_data[21] => Equal0.IN3
hex_data[22] => Equal0.IN2
hex_data[23] => Equal0.IN1
hex_data[24] => ~NO_FANOUT~
hex_data[25] => ~NO_FANOUT~
hex_data[26] => ~NO_FANOUT~
hex_data[27] => ~NO_FANOUT~
hex_data[28] => ~NO_FANOUT~
hex_data[29] => ~NO_FANOUT~
hex_data[30] => ~NO_FANOUT~
hex_data[31] => ~NO_FANOUT~
data_ready => ~NO_FANOUT~
ic_read <= ic_read~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[0] <= HEX0[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= HEX0[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= HEX0[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= HEX0[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= HEX0[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= HEX0[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= HEX0[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[0] <= HEX1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[1] <= HEX1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[2] <= HEX1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[3] <= HEX1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[4] <= HEX1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[5] <= HEX1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[6] <= HEX1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[0] <= HEX2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[1] <= HEX2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[2] <= HEX2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[3] <= HEX2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[4] <= HEX2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[5] <= HEX2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[6] <= HEX2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[0] <= HEX3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[1] <= HEX3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[2] <= HEX3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[3] <= HEX3[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[4] <= HEX3[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[5] <= HEX3[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[6] <= HEX3[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_ready2 => HEX3[0]~reg0.CLK
data_ready2 => HEX3[1]~reg0.CLK
data_ready2 => HEX3[2]~reg0.CLK
data_ready2 => HEX3[3]~reg0.CLK
data_ready2 => HEX3[4]~reg0.CLK
data_ready2 => HEX3[5]~reg0.CLK
data_ready2 => HEX3[6]~reg0.CLK
data_ready2 => HEX2[0]~reg0.CLK
data_ready2 => HEX2[1]~reg0.CLK
data_ready2 => HEX2[2]~reg0.CLK
data_ready2 => HEX2[3]~reg0.CLK
data_ready2 => HEX2[4]~reg0.CLK
data_ready2 => HEX2[5]~reg0.CLK
data_ready2 => HEX2[6]~reg0.CLK
data_ready2 => HEX1[0]~reg0.CLK
data_ready2 => HEX1[1]~reg0.CLK
data_ready2 => HEX1[2]~reg0.CLK
data_ready2 => HEX1[3]~reg0.CLK
data_ready2 => HEX1[4]~reg0.CLK
data_ready2 => HEX1[5]~reg0.CLK
data_ready2 => HEX1[6]~reg0.CLK
data_ready2 => HEX0[0]~reg0.CLK
data_ready2 => HEX0[1]~reg0.CLK
data_ready2 => HEX0[2]~reg0.CLK
data_ready2 => HEX0[3]~reg0.CLK
data_ready2 => HEX0[4]~reg0.CLK
data_ready2 => HEX0[5]~reg0.CLK
data_ready2 => HEX0[6]~reg0.CLK
data_ready2 => iDIG[0].CLK
data_ready2 => iDIG[1].CLK
data_ready2 => iDIG[2].CLK
data_ready2 => iDIG[3].CLK
data_ready2 => ic_read~reg0.CLK
data_ready2 => main_state[0].CLK
data_ready2 => main_state[1].CLK
data_ready2 => main_state[2].CLK


|ic_tester|Input_Reciver:comb_3|generate_ic_number:gin1
ic_read => ic_no_generated~reg0.DATAIN
ic_read => num1000[4].ENA
ic_read => num1000[3].ENA
ic_read => num1000[2].ENA
ic_read => num1000[1].ENA
ic_read => num1000[0].ENA
ic_read => num1000[5].ENA
ic_read => num1000[6].ENA
ic_read => num1000[7].ENA
ic_read => num1000[8].ENA
ic_read => num1000[9].ENA
ic_read => num1000[10].ENA
ic_read => num1000[11].ENA
ic_read => num1000[12].ENA
ic_read => num1000[13].ENA
ic_read => num1000[14].ENA
ic_read => num1000[15].ENA
ic_read => num1000[16].ENA
ic_read => num1000[17].ENA
ic_read => num1000[18].ENA
ic_read => num1000[19].ENA
ic_read => num1000[20].ENA
ic_read => num1000[21].ENA
ic_read => num1000[22].ENA
ic_read => num1000[23].ENA
ic_read => num1000[24].ENA
ic_read => num1000[25].ENA
ic_read => num1000[26].ENA
ic_read => num1000[27].ENA
ic_read => num1000[28].ENA
ic_read => num1000[29].ENA
ic_read => num1000[30].ENA
ic_read => num1000[31].ENA
ic_read => num100[0].ENA
ic_read => num100[1].ENA
ic_read => num100[2].ENA
ic_read => num100[3].ENA
ic_read => num100[4].ENA
ic_read => num100[5].ENA
ic_read => num100[6].ENA
ic_read => num100[7].ENA
ic_read => num100[8].ENA
ic_read => num100[9].ENA
ic_read => num100[10].ENA
ic_read => num100[11].ENA
ic_read => num100[12].ENA
ic_read => num100[13].ENA
ic_read => num100[14].ENA
ic_read => num100[15].ENA
ic_read => num100[16].ENA
ic_read => num100[17].ENA
ic_read => num100[18].ENA
ic_read => num100[19].ENA
ic_read => num100[20].ENA
ic_read => num100[21].ENA
ic_read => num100[22].ENA
ic_read => num100[23].ENA
ic_read => num100[24].ENA
ic_read => num100[25].ENA
ic_read => num100[26].ENA
ic_read => num100[27].ENA
ic_read => num100[28].ENA
ic_read => num100[29].ENA
ic_read => num100[30].ENA
ic_read => num100[31].ENA
ic_read => num10[0].ENA
ic_read => num10[1].ENA
ic_read => num10[2].ENA
ic_read => num10[3].ENA
ic_read => num10[4].ENA
ic_read => num10[5].ENA
ic_read => num10[6].ENA
ic_read => num10[7].ENA
ic_read => num10[8].ENA
ic_read => num10[9].ENA
ic_read => num10[10].ENA
ic_read => num10[11].ENA
ic_read => num10[12].ENA
ic_read => num10[13].ENA
ic_read => num10[14].ENA
ic_read => num10[15].ENA
ic_read => num10[16].ENA
ic_read => num10[17].ENA
ic_read => num10[18].ENA
ic_read => num10[19].ENA
ic_read => num10[20].ENA
ic_read => num10[21].ENA
ic_read => num10[22].ENA
ic_read => num10[23].ENA
ic_read => num10[24].ENA
ic_read => num10[25].ENA
ic_read => num10[26].ENA
ic_read => num10[27].ENA
ic_read => num10[28].ENA
ic_read => num10[29].ENA
ic_read => num10[30].ENA
ic_read => num10[31].ENA
ic_read => num[0].ENA
ic_read => num[1].ENA
ic_read => num[2].ENA
ic_read => num[3].ENA
ic_read => num[4].ENA
ic_read => num[5].ENA
ic_read => num[6].ENA
ic_read => num[7].ENA
ic_read => num[8].ENA
ic_read => num[9].ENA
ic_read => num[10].ENA
ic_read => num[11].ENA
ic_read => num[12].ENA
ic_read => num[13].ENA
ic_read => num[14].ENA
ic_read => num[15].ENA
ic_read => num[16].ENA
ic_read => num[17].ENA
ic_read => num[18].ENA
ic_read => num[19].ENA
ic_read => num[20].ENA
ic_read => num[21].ENA
ic_read => num[22].ENA
ic_read => num[23].ENA
ic_read => num[24].ENA
ic_read => num[25].ENA
ic_read => num[26].ENA
ic_read => num[27].ENA
ic_read => num[28].ENA
ic_read => num[29].ENA
ic_read => num[30].ENA
ic_read => num[31].ENA
ic_read => number[0]~reg0.ENA
ic_read => number[1]~reg0.ENA
ic_read => number[2]~reg0.ENA
ic_read => number[3]~reg0.ENA
ic_read => number[4]~reg0.ENA
ic_read => number[5]~reg0.ENA
ic_read => number[6]~reg0.ENA
ic_read => number[7]~reg0.ENA
ic_read => number[8]~reg0.ENA
ic_read => number[9]~reg0.ENA
ic_read => number[10]~reg0.ENA
ic_read => number[11]~reg0.ENA
ic_read => number[12]~reg0.ENA
ic_read => number[13]~reg0.ENA
ic_read => number[14]~reg0.ENA
ic_read => number[15]~reg0.ENA
ic_read => number[16]~reg0.ENA
ic_read => number[17]~reg0.ENA
ic_read => number[18]~reg0.ENA
ic_read => number[19]~reg0.ENA
ic_read => number[20]~reg0.ENA
ic_read => number[21]~reg0.ENA
ic_read => number[22]~reg0.ENA
ic_read => number[23]~reg0.ENA
ic_read => number[24]~reg0.ENA
ic_read => number[25]~reg0.ENA
ic_read => number[26]~reg0.ENA
ic_read => number[27]~reg0.ENA
ic_read => number[28]~reg0.ENA
ic_read => number[29]~reg0.ENA
ic_read => number[30]~reg0.ENA
ic_read => number[31]~reg0.ENA
HEX0[0] => Decoder0.IN6
HEX0[1] => Decoder0.IN5
HEX0[2] => Decoder0.IN4
HEX0[3] => Decoder0.IN3
HEX0[4] => Decoder0.IN2
HEX0[5] => Decoder0.IN1
HEX0[6] => Decoder0.IN0
HEX1[0] => Decoder1.IN6
HEX1[1] => Decoder1.IN5
HEX1[2] => Decoder1.IN4
HEX1[3] => Decoder1.IN3
HEX1[4] => Decoder1.IN2
HEX1[5] => Decoder1.IN1
HEX1[6] => Decoder1.IN0
HEX2[0] => Decoder2.IN6
HEX2[1] => Decoder2.IN5
HEX2[2] => Decoder2.IN4
HEX2[3] => Decoder2.IN3
HEX2[4] => Decoder2.IN2
HEX2[5] => Decoder2.IN1
HEX2[6] => Decoder2.IN0
HEX3[0] => Decoder3.IN6
HEX3[1] => Decoder3.IN5
HEX3[2] => Decoder3.IN4
HEX3[3] => Decoder3.IN3
HEX3[4] => Decoder3.IN2
HEX3[5] => Decoder3.IN1
HEX3[6] => Decoder3.IN0
number[0] <= number[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[1] <= number[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[2] <= number[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[3] <= number[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[4] <= number[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[5] <= number[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[6] <= number[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[7] <= number[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[8] <= number[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[9] <= number[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[10] <= number[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[11] <= number[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[12] <= number[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[13] <= number[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[14] <= number[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[15] <= number[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[16] <= number[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[17] <= number[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[18] <= number[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[19] <= number[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[20] <= number[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[21] <= number[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[22] <= number[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[23] <= number[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[24] <= number[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[25] <= number[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[26] <= number[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[27] <= number[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[28] <= number[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[29] <= number[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[30] <= number[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
number[31] <= number[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ic_no_generated <= ic_no_generated~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => num1000[0].CLK
clk => num1000[1].CLK
clk => num1000[2].CLK
clk => num1000[3].CLK
clk => num1000[4].CLK
clk => num1000[5].CLK
clk => num1000[6].CLK
clk => num1000[7].CLK
clk => num1000[8].CLK
clk => num1000[9].CLK
clk => num1000[10].CLK
clk => num1000[11].CLK
clk => num1000[12].CLK
clk => num1000[13].CLK
clk => num1000[14].CLK
clk => num1000[15].CLK
clk => num1000[16].CLK
clk => num1000[17].CLK
clk => num1000[18].CLK
clk => num1000[19].CLK
clk => num1000[20].CLK
clk => num1000[21].CLK
clk => num1000[22].CLK
clk => num1000[23].CLK
clk => num1000[24].CLK
clk => num1000[25].CLK
clk => num1000[26].CLK
clk => num1000[27].CLK
clk => num1000[28].CLK
clk => num1000[29].CLK
clk => num1000[30].CLK
clk => num1000[31].CLK
clk => num100[0].CLK
clk => num100[1].CLK
clk => num100[2].CLK
clk => num100[3].CLK
clk => num100[4].CLK
clk => num100[5].CLK
clk => num100[6].CLK
clk => num100[7].CLK
clk => num100[8].CLK
clk => num100[9].CLK
clk => num100[10].CLK
clk => num100[11].CLK
clk => num100[12].CLK
clk => num100[13].CLK
clk => num100[14].CLK
clk => num100[15].CLK
clk => num100[16].CLK
clk => num100[17].CLK
clk => num100[18].CLK
clk => num100[19].CLK
clk => num100[20].CLK
clk => num100[21].CLK
clk => num100[22].CLK
clk => num100[23].CLK
clk => num100[24].CLK
clk => num100[25].CLK
clk => num100[26].CLK
clk => num100[27].CLK
clk => num100[28].CLK
clk => num100[29].CLK
clk => num100[30].CLK
clk => num100[31].CLK
clk => num10[0].CLK
clk => num10[1].CLK
clk => num10[2].CLK
clk => num10[3].CLK
clk => num10[4].CLK
clk => num10[5].CLK
clk => num10[6].CLK
clk => num10[7].CLK
clk => num10[8].CLK
clk => num10[9].CLK
clk => num10[10].CLK
clk => num10[11].CLK
clk => num10[12].CLK
clk => num10[13].CLK
clk => num10[14].CLK
clk => num10[15].CLK
clk => num10[16].CLK
clk => num10[17].CLK
clk => num10[18].CLK
clk => num10[19].CLK
clk => num10[20].CLK
clk => num10[21].CLK
clk => num10[22].CLK
clk => num10[23].CLK
clk => num10[24].CLK
clk => num10[25].CLK
clk => num10[26].CLK
clk => num10[27].CLK
clk => num10[28].CLK
clk => num10[29].CLK
clk => num10[30].CLK
clk => num10[31].CLK
clk => num[0].CLK
clk => num[1].CLK
clk => num[2].CLK
clk => num[3].CLK
clk => num[4].CLK
clk => num[5].CLK
clk => num[6].CLK
clk => num[7].CLK
clk => num[8].CLK
clk => num[9].CLK
clk => num[10].CLK
clk => num[11].CLK
clk => num[12].CLK
clk => num[13].CLK
clk => num[14].CLK
clk => num[15].CLK
clk => num[16].CLK
clk => num[17].CLK
clk => num[18].CLK
clk => num[19].CLK
clk => num[20].CLK
clk => num[21].CLK
clk => num[22].CLK
clk => num[23].CLK
clk => num[24].CLK
clk => num[25].CLK
clk => num[26].CLK
clk => num[27].CLK
clk => num[28].CLK
clk => num[29].CLK
clk => num[30].CLK
clk => num[31].CLK
clk => ic_no_generated~reg0.CLK
clk => number[0]~reg0.CLK
clk => number[1]~reg0.CLK
clk => number[2]~reg0.CLK
clk => number[3]~reg0.CLK
clk => number[4]~reg0.CLK
clk => number[5]~reg0.CLK
clk => number[6]~reg0.CLK
clk => number[7]~reg0.CLK
clk => number[8]~reg0.CLK
clk => number[9]~reg0.CLK
clk => number[10]~reg0.CLK
clk => number[11]~reg0.CLK
clk => number[12]~reg0.CLK
clk => number[13]~reg0.CLK
clk => number[14]~reg0.CLK
clk => number[15]~reg0.CLK
clk => number[16]~reg0.CLK
clk => number[17]~reg0.CLK
clk => number[18]~reg0.CLK
clk => number[19]~reg0.CLK
clk => number[20]~reg0.CLK
clk => number[21]~reg0.CLK
clk => number[22]~reg0.CLK
clk => number[23]~reg0.CLK
clk => number[24]~reg0.CLK
clk => number[25]~reg0.CLK
clk => number[26]~reg0.CLK
clk => number[27]~reg0.CLK
clk => number[28]~reg0.CLK
clk => number[29]~reg0.CLK
clk => number[30]~reg0.CLK
clk => number[31]~reg0.CLK


|ic_tester|testing_logic:tl1
IN1 <= logical_function_check:lfc1.IN1
IN2 <= logical_function_check:lfc1.IN2
IN3 <= logical_function_check:lfc1.IN3
IN4 <= logical_function_check:lfc1.IN4
IN5 <= logical_function_check:lfc1.IN5
IN6 <= logical_function_check:lfc1.IN6
IN8 <= logical_function_check:lfc1.IN8
IN9 <= logical_function_check:lfc1.IN9
IN10 <= logical_function_check:lfc1.IN10
IN11 <= logical_function_check:lfc1.IN11
IN12 <= logical_function_check:lfc1.IN12
IN13 <= logical_function_check:lfc1.IN13
OP1 => OP1.IN1
OP2 => OP2.IN1
OP3 => OP3.IN1
OP4 => OP4.IN1
OP5 => OP5.IN1
OP6 => OP6.IN1
OP8 => OP8.IN1
OP9 => OP9.IN1
OP10 => OP10.IN1
OP11 => OP11.IN1
OP12 => OP12.IN1
OP13 => OP13.IN1
pass1 <= logical_function_check:lfc1.pass1
pass2 <= logical_function_check:lfc1.pass2
pass3 <= logical_function_check:lfc1.pass3
pass4 <= logical_function_check:lfc1.pass4
pass5 <= logical_function_check:lfc1.pass5
pass6 <= logical_function_check:lfc1.pass6
fail1 <= logical_function_check:lfc1.fail1
fail2 <= logical_function_check:lfc1.fail2
fail3 <= logical_function_check:lfc1.fail3
fail4 <= logical_function_check:lfc1.fail4
fail5 <= logical_function_check:lfc1.fail5
fail6 <= logical_function_check:lfc1.fail6
pass <= logical_function_check:lfc1.pass
fail <= logical_function_check:lfc1.fail
clk => clk.IN1
ICNumber[0] => ICNumber[0].IN1
ICNumber[1] => ICNumber[1].IN1
ICNumber[2] => ICNumber[2].IN1
ICNumber[3] => ICNumber[3].IN1
ICNumber[4] => ICNumber[4].IN1
ICNumber[5] => ICNumber[5].IN1
ICNumber[6] => ICNumber[6].IN1
ICNumber[7] => ICNumber[7].IN1
ICNumber[8] => ICNumber[8].IN1
ICNumber[9] => ICNumber[9].IN1
ICNumber[10] => ICNumber[10].IN1
ICNumber[11] => ICNumber[11].IN1
ICNumber[12] => ICNumber[12].IN1
ICNumber[13] => ICNumber[13].IN1
ICNumber[14] => ICNumber[14].IN1
ICNumber[15] => ICNumber[15].IN1
ICNumber[16] => ICNumber[16].IN1
ICNumber[17] => ICNumber[17].IN1
ICNumber[18] => ICNumber[18].IN1
ICNumber[19] => ICNumber[19].IN1
ICNumber[20] => ICNumber[20].IN1
ICNumber[21] => ICNumber[21].IN1
ICNumber[22] => ICNumber[22].IN1
ICNumber[23] => ICNumber[23].IN1
ICNumber[24] => ICNumber[24].IN1
ICNumber[25] => ICNumber[25].IN1
ICNumber[26] => ICNumber[26].IN1
ICNumber[27] => ICNumber[27].IN1
ICNumber[28] => ICNumber[28].IN1
ICNumber[29] => ICNumber[29].IN1
ICNumber[30] => ICNumber[30].IN1
ICNumber[31] => ICNumber[31].IN1
to_LCD <= icNumber_decoder:icd1.to_LCD
icg => icg.IN1


|ic_tester|testing_logic:tl1|icNumber_decoder:icd1
icNumber[0] => Equal0.IN31
icNumber[0] => Equal1.IN8
icNumber[0] => Equal2.IN31
icNumber[0] => Equal3.IN7
icNumber[0] => Equal4.IN31
icNumber[0] => Equal5.IN31
icNumber[0] => Equal6.IN31
icNumber[0] => Equal7.IN31
icNumber[0] => Equal8.IN8
icNumber[0] => Equal9.IN31
icNumber[0] => Equal10.IN5
icNumber[0] => Equal11.IN31
icNumber[0] => Equal12.IN9
icNumber[0] => Equal13.IN31
icNumber[0] => Equal14.IN31
icNumber[0] => Equal15.IN8
icNumber[0] => Equal16.IN31
icNumber[1] => Equal0.IN30
icNumber[1] => Equal1.IN7
icNumber[1] => Equal2.IN30
icNumber[1] => Equal3.IN31
icNumber[1] => Equal4.IN30
icNumber[1] => Equal5.IN8
icNumber[1] => Equal6.IN30
icNumber[1] => Equal7.IN7
icNumber[1] => Equal8.IN7
icNumber[1] => Equal9.IN30
icNumber[1] => Equal10.IN4
icNumber[1] => Equal11.IN30
icNumber[1] => Equal12.IN31
icNumber[1] => Equal13.IN5
icNumber[1] => Equal14.IN30
icNumber[1] => Equal15.IN31
icNumber[1] => Equal16.IN8
icNumber[2] => Equal0.IN29
icNumber[2] => Equal1.IN31
icNumber[2] => Equal2.IN29
icNumber[2] => Equal3.IN30
icNumber[2] => Equal4.IN29
icNumber[2] => Equal5.IN7
icNumber[2] => Equal6.IN5
icNumber[2] => Equal7.IN30
icNumber[2] => Equal8.IN31
icNumber[2] => Equal9.IN7
icNumber[2] => Equal10.IN31
icNumber[2] => Equal11.IN8
icNumber[2] => Equal12.IN8
icNumber[2] => Equal13.IN4
icNumber[2] => Equal14.IN7
icNumber[2] => Equal15.IN7
icNumber[2] => Equal16.IN7
icNumber[3] => Equal0.IN6
icNumber[3] => Equal1.IN6
icNumber[3] => Equal2.IN28
icNumber[3] => Equal3.IN29
icNumber[3] => Equal4.IN4
icNumber[3] => Equal5.IN6
icNumber[3] => Equal6.IN29
icNumber[3] => Equal7.IN29
icNumber[3] => Equal8.IN30
icNumber[3] => Equal9.IN29
icNumber[3] => Equal10.IN30
icNumber[3] => Equal11.IN7
icNumber[3] => Equal12.IN7
icNumber[3] => Equal13.IN30
icNumber[3] => Equal14.IN6
icNumber[3] => Equal15.IN6
icNumber[3] => Equal16.IN30
icNumber[4] => Equal0.IN28
icNumber[4] => Equal1.IN30
icNumber[4] => Equal2.IN6
icNumber[4] => Equal3.IN6
icNumber[4] => Equal4.IN28
icNumber[4] => Equal5.IN5
icNumber[4] => Equal6.IN4
icNumber[4] => Equal7.IN6
icNumber[4] => Equal8.IN6
icNumber[4] => Equal9.IN6
icNumber[4] => Equal10.IN29
icNumber[4] => Equal11.IN6
icNumber[4] => Equal12.IN6
icNumber[4] => Equal13.IN29
icNumber[4] => Equal14.IN29
icNumber[4] => Equal15.IN30
icNumber[4] => Equal16.IN6
icNumber[5] => Equal0.IN5
icNumber[5] => Equal1.IN5
icNumber[5] => Equal2.IN5
icNumber[5] => Equal3.IN5
icNumber[5] => Equal4.IN27
icNumber[5] => Equal5.IN4
icNumber[5] => Equal6.IN28
icNumber[5] => Equal7.IN5
icNumber[5] => Equal8.IN5
icNumber[5] => Equal9.IN5
icNumber[5] => Equal10.IN28
icNumber[5] => Equal11.IN5
icNumber[5] => Equal12.IN5
icNumber[5] => Equal13.IN28
icNumber[5] => Equal14.IN5
icNumber[5] => Equal15.IN5
icNumber[5] => Equal16.IN5
icNumber[6] => Equal0.IN4
icNumber[6] => Equal1.IN4
icNumber[6] => Equal2.IN4
icNumber[6] => Equal3.IN4
icNumber[6] => Equal4.IN26
icNumber[6] => Equal5.IN30
icNumber[6] => Equal6.IN27
icNumber[6] => Equal7.IN4
icNumber[6] => Equal8.IN4
icNumber[6] => Equal9.IN4
icNumber[6] => Equal10.IN27
icNumber[6] => Equal11.IN4
icNumber[6] => Equal12.IN4
icNumber[6] => Equal13.IN27
icNumber[6] => Equal14.IN4
icNumber[6] => Equal15.IN4
icNumber[6] => Equal16.IN4
icNumber[7] => Equal0.IN3
icNumber[7] => Equal1.IN3
icNumber[7] => Equal2.IN3
icNumber[7] => Equal3.IN3
icNumber[7] => Equal4.IN25
icNumber[7] => Equal5.IN29
icNumber[7] => Equal6.IN3
icNumber[7] => Equal7.IN3
icNumber[7] => Equal8.IN3
icNumber[7] => Equal9.IN3
icNumber[7] => Equal10.IN26
icNumber[7] => Equal11.IN3
icNumber[7] => Equal12.IN3
icNumber[7] => Equal13.IN26
icNumber[7] => Equal14.IN3
icNumber[7] => Equal15.IN3
icNumber[7] => Equal16.IN3
icNumber[8] => Equal0.IN27
icNumber[8] => Equal1.IN29
icNumber[8] => Equal2.IN27
icNumber[8] => Equal3.IN28
icNumber[8] => Equal4.IN3
icNumber[8] => Equal5.IN3
icNumber[8] => Equal6.IN2
icNumber[8] => Equal7.IN28
icNumber[8] => Equal8.IN29
icNumber[8] => Equal9.IN28
icNumber[8] => Equal10.IN3
icNumber[8] => Equal11.IN29
icNumber[8] => Equal12.IN30
icNumber[8] => Equal13.IN3
icNumber[8] => Equal14.IN28
icNumber[8] => Equal15.IN29
icNumber[8] => Equal16.IN29
icNumber[9] => Equal0.IN26
icNumber[9] => Equal1.IN28
icNumber[9] => Equal2.IN26
icNumber[9] => Equal3.IN27
icNumber[9] => Equal4.IN24
icNumber[9] => Equal5.IN28
icNumber[9] => Equal6.IN26
icNumber[9] => Equal7.IN27
icNumber[9] => Equal8.IN28
icNumber[9] => Equal9.IN27
icNumber[9] => Equal10.IN25
icNumber[9] => Equal11.IN28
icNumber[9] => Equal12.IN29
icNumber[9] => Equal13.IN25
icNumber[9] => Equal14.IN27
icNumber[9] => Equal15.IN28
icNumber[9] => Equal16.IN28
icNumber[10] => Equal0.IN2
icNumber[10] => Equal1.IN2
icNumber[10] => Equal2.IN2
icNumber[10] => Equal3.IN2
icNumber[10] => Equal4.IN2
icNumber[10] => Equal5.IN2
icNumber[10] => Equal6.IN25
icNumber[10] => Equal7.IN2
icNumber[10] => Equal8.IN2
icNumber[10] => Equal9.IN2
icNumber[10] => Equal10.IN2
icNumber[10] => Equal11.IN2
icNumber[10] => Equal12.IN2
icNumber[10] => Equal13.IN2
icNumber[10] => Equal14.IN2
icNumber[10] => Equal15.IN2
icNumber[10] => Equal16.IN2
icNumber[11] => Equal0.IN1
icNumber[11] => Equal1.IN1
icNumber[11] => Equal2.IN1
icNumber[11] => Equal3.IN1
icNumber[11] => Equal4.IN1
icNumber[11] => Equal5.IN1
icNumber[11] => Equal6.IN24
icNumber[11] => Equal7.IN1
icNumber[11] => Equal8.IN1
icNumber[11] => Equal9.IN1
icNumber[11] => Equal10.IN1
icNumber[11] => Equal11.IN1
icNumber[11] => Equal12.IN1
icNumber[11] => Equal13.IN1
icNumber[11] => Equal14.IN1
icNumber[11] => Equal15.IN1
icNumber[11] => Equal16.IN1
icNumber[12] => Equal0.IN0
icNumber[12] => Equal1.IN0
icNumber[12] => Equal2.IN0
icNumber[12] => Equal3.IN0
icNumber[12] => Equal4.IN0
icNumber[12] => Equal5.IN0
icNumber[12] => Equal6.IN23
icNumber[12] => Equal7.IN0
icNumber[12] => Equal8.IN0
icNumber[12] => Equal9.IN0
icNumber[12] => Equal10.IN0
icNumber[12] => Equal11.IN0
icNumber[12] => Equal12.IN0
icNumber[12] => Equal13.IN0
icNumber[12] => Equal14.IN0
icNumber[12] => Equal15.IN0
icNumber[12] => Equal16.IN0
icNumber[13] => Equal0.IN25
icNumber[13] => Equal1.IN27
icNumber[13] => Equal2.IN25
icNumber[13] => Equal3.IN26
icNumber[13] => Equal4.IN23
icNumber[13] => Equal5.IN27
icNumber[13] => Equal6.IN1
icNumber[13] => Equal7.IN26
icNumber[13] => Equal8.IN27
icNumber[13] => Equal9.IN26
icNumber[13] => Equal10.IN24
icNumber[13] => Equal11.IN27
icNumber[13] => Equal12.IN28
icNumber[13] => Equal13.IN24
icNumber[13] => Equal14.IN26
icNumber[13] => Equal15.IN27
icNumber[13] => Equal16.IN27
icNumber[14] => Equal0.IN24
icNumber[14] => Equal1.IN26
icNumber[14] => Equal2.IN24
icNumber[14] => Equal3.IN25
icNumber[14] => Equal4.IN22
icNumber[14] => Equal5.IN26
icNumber[14] => Equal6.IN22
icNumber[14] => Equal7.IN25
icNumber[14] => Equal8.IN26
icNumber[14] => Equal9.IN25
icNumber[14] => Equal10.IN23
icNumber[14] => Equal11.IN26
icNumber[14] => Equal12.IN27
icNumber[14] => Equal13.IN23
icNumber[14] => Equal14.IN25
icNumber[14] => Equal15.IN26
icNumber[14] => Equal16.IN26
icNumber[15] => Equal0.IN23
icNumber[15] => Equal1.IN25
icNumber[15] => Equal2.IN23
icNumber[15] => Equal3.IN24
icNumber[15] => Equal4.IN21
icNumber[15] => Equal5.IN25
icNumber[15] => Equal6.IN21
icNumber[15] => Equal7.IN24
icNumber[15] => Equal8.IN25
icNumber[15] => Equal9.IN24
icNumber[15] => Equal10.IN22
icNumber[15] => Equal11.IN25
icNumber[15] => Equal12.IN26
icNumber[15] => Equal13.IN22
icNumber[15] => Equal14.IN24
icNumber[15] => Equal15.IN25
icNumber[15] => Equal16.IN25
icNumber[16] => Equal0.IN22
icNumber[16] => Equal1.IN24
icNumber[16] => Equal2.IN22
icNumber[16] => Equal3.IN23
icNumber[16] => Equal4.IN20
icNumber[16] => Equal5.IN24
icNumber[16] => Equal6.IN0
icNumber[16] => Equal7.IN23
icNumber[16] => Equal8.IN24
icNumber[16] => Equal9.IN23
icNumber[16] => Equal10.IN21
icNumber[16] => Equal11.IN24
icNumber[16] => Equal12.IN25
icNumber[16] => Equal13.IN21
icNumber[16] => Equal14.IN23
icNumber[16] => Equal15.IN24
icNumber[16] => Equal16.IN24
icNumber[17] => Equal0.IN21
icNumber[17] => Equal1.IN23
icNumber[17] => Equal2.IN21
icNumber[17] => Equal3.IN22
icNumber[17] => Equal4.IN19
icNumber[17] => Equal5.IN23
icNumber[17] => Equal6.IN20
icNumber[17] => Equal7.IN22
icNumber[17] => Equal8.IN23
icNumber[17] => Equal9.IN22
icNumber[17] => Equal10.IN20
icNumber[17] => Equal11.IN23
icNumber[17] => Equal12.IN24
icNumber[17] => Equal13.IN20
icNumber[17] => Equal14.IN22
icNumber[17] => Equal15.IN23
icNumber[17] => Equal16.IN23
icNumber[18] => Equal0.IN20
icNumber[18] => Equal1.IN22
icNumber[18] => Equal2.IN20
icNumber[18] => Equal3.IN21
icNumber[18] => Equal4.IN18
icNumber[18] => Equal5.IN22
icNumber[18] => Equal6.IN19
icNumber[18] => Equal7.IN21
icNumber[18] => Equal8.IN22
icNumber[18] => Equal9.IN21
icNumber[18] => Equal10.IN19
icNumber[18] => Equal11.IN22
icNumber[18] => Equal12.IN23
icNumber[18] => Equal13.IN19
icNumber[18] => Equal14.IN21
icNumber[18] => Equal15.IN22
icNumber[18] => Equal16.IN22
icNumber[19] => Equal0.IN19
icNumber[19] => Equal1.IN21
icNumber[19] => Equal2.IN19
icNumber[19] => Equal3.IN20
icNumber[19] => Equal4.IN17
icNumber[19] => Equal5.IN21
icNumber[19] => Equal6.IN18
icNumber[19] => Equal7.IN20
icNumber[19] => Equal8.IN21
icNumber[19] => Equal9.IN20
icNumber[19] => Equal10.IN18
icNumber[19] => Equal11.IN21
icNumber[19] => Equal12.IN22
icNumber[19] => Equal13.IN18
icNumber[19] => Equal14.IN20
icNumber[19] => Equal15.IN21
icNumber[19] => Equal16.IN21
icNumber[20] => Equal0.IN18
icNumber[20] => Equal1.IN20
icNumber[20] => Equal2.IN18
icNumber[20] => Equal3.IN19
icNumber[20] => Equal4.IN16
icNumber[20] => Equal5.IN20
icNumber[20] => Equal6.IN17
icNumber[20] => Equal7.IN19
icNumber[20] => Equal8.IN20
icNumber[20] => Equal9.IN19
icNumber[20] => Equal10.IN17
icNumber[20] => Equal11.IN20
icNumber[20] => Equal12.IN21
icNumber[20] => Equal13.IN17
icNumber[20] => Equal14.IN19
icNumber[20] => Equal15.IN20
icNumber[20] => Equal16.IN20
icNumber[21] => Equal0.IN17
icNumber[21] => Equal1.IN19
icNumber[21] => Equal2.IN17
icNumber[21] => Equal3.IN18
icNumber[21] => Equal4.IN15
icNumber[21] => Equal5.IN19
icNumber[21] => Equal6.IN16
icNumber[21] => Equal7.IN18
icNumber[21] => Equal8.IN19
icNumber[21] => Equal9.IN18
icNumber[21] => Equal10.IN16
icNumber[21] => Equal11.IN19
icNumber[21] => Equal12.IN20
icNumber[21] => Equal13.IN16
icNumber[21] => Equal14.IN18
icNumber[21] => Equal15.IN19
icNumber[21] => Equal16.IN19
icNumber[22] => Equal0.IN16
icNumber[22] => Equal1.IN18
icNumber[22] => Equal2.IN16
icNumber[22] => Equal3.IN17
icNumber[22] => Equal4.IN14
icNumber[22] => Equal5.IN18
icNumber[22] => Equal6.IN15
icNumber[22] => Equal7.IN17
icNumber[22] => Equal8.IN18
icNumber[22] => Equal9.IN17
icNumber[22] => Equal10.IN15
icNumber[22] => Equal11.IN18
icNumber[22] => Equal12.IN19
icNumber[22] => Equal13.IN15
icNumber[22] => Equal14.IN17
icNumber[22] => Equal15.IN18
icNumber[22] => Equal16.IN18
icNumber[23] => Equal0.IN15
icNumber[23] => Equal1.IN17
icNumber[23] => Equal2.IN15
icNumber[23] => Equal3.IN16
icNumber[23] => Equal4.IN13
icNumber[23] => Equal5.IN17
icNumber[23] => Equal6.IN14
icNumber[23] => Equal7.IN16
icNumber[23] => Equal8.IN17
icNumber[23] => Equal9.IN16
icNumber[23] => Equal10.IN14
icNumber[23] => Equal11.IN17
icNumber[23] => Equal12.IN18
icNumber[23] => Equal13.IN14
icNumber[23] => Equal14.IN16
icNumber[23] => Equal15.IN17
icNumber[23] => Equal16.IN17
icNumber[24] => Equal0.IN14
icNumber[24] => Equal1.IN16
icNumber[24] => Equal2.IN14
icNumber[24] => Equal3.IN15
icNumber[24] => Equal4.IN12
icNumber[24] => Equal5.IN16
icNumber[24] => Equal6.IN13
icNumber[24] => Equal7.IN15
icNumber[24] => Equal8.IN16
icNumber[24] => Equal9.IN15
icNumber[24] => Equal10.IN13
icNumber[24] => Equal11.IN16
icNumber[24] => Equal12.IN17
icNumber[24] => Equal13.IN13
icNumber[24] => Equal14.IN15
icNumber[24] => Equal15.IN16
icNumber[24] => Equal16.IN16
icNumber[25] => Equal0.IN13
icNumber[25] => Equal1.IN15
icNumber[25] => Equal2.IN13
icNumber[25] => Equal3.IN14
icNumber[25] => Equal4.IN11
icNumber[25] => Equal5.IN15
icNumber[25] => Equal6.IN12
icNumber[25] => Equal7.IN14
icNumber[25] => Equal8.IN15
icNumber[25] => Equal9.IN14
icNumber[25] => Equal10.IN12
icNumber[25] => Equal11.IN15
icNumber[25] => Equal12.IN16
icNumber[25] => Equal13.IN12
icNumber[25] => Equal14.IN14
icNumber[25] => Equal15.IN15
icNumber[25] => Equal16.IN15
icNumber[26] => Equal0.IN12
icNumber[26] => Equal1.IN14
icNumber[26] => Equal2.IN12
icNumber[26] => Equal3.IN13
icNumber[26] => Equal4.IN10
icNumber[26] => Equal5.IN14
icNumber[26] => Equal6.IN11
icNumber[26] => Equal7.IN13
icNumber[26] => Equal8.IN14
icNumber[26] => Equal9.IN13
icNumber[26] => Equal10.IN11
icNumber[26] => Equal11.IN14
icNumber[26] => Equal12.IN15
icNumber[26] => Equal13.IN11
icNumber[26] => Equal14.IN13
icNumber[26] => Equal15.IN14
icNumber[26] => Equal16.IN14
icNumber[27] => Equal0.IN11
icNumber[27] => Equal1.IN13
icNumber[27] => Equal2.IN11
icNumber[27] => Equal3.IN12
icNumber[27] => Equal4.IN9
icNumber[27] => Equal5.IN13
icNumber[27] => Equal6.IN10
icNumber[27] => Equal7.IN12
icNumber[27] => Equal8.IN13
icNumber[27] => Equal9.IN12
icNumber[27] => Equal10.IN10
icNumber[27] => Equal11.IN13
icNumber[27] => Equal12.IN14
icNumber[27] => Equal13.IN10
icNumber[27] => Equal14.IN12
icNumber[27] => Equal15.IN13
icNumber[27] => Equal16.IN13
icNumber[28] => Equal0.IN10
icNumber[28] => Equal1.IN12
icNumber[28] => Equal2.IN10
icNumber[28] => Equal3.IN11
icNumber[28] => Equal4.IN8
icNumber[28] => Equal5.IN12
icNumber[28] => Equal6.IN9
icNumber[28] => Equal7.IN11
icNumber[28] => Equal8.IN12
icNumber[28] => Equal9.IN11
icNumber[28] => Equal10.IN9
icNumber[28] => Equal11.IN12
icNumber[28] => Equal12.IN13
icNumber[28] => Equal13.IN9
icNumber[28] => Equal14.IN11
icNumber[28] => Equal15.IN12
icNumber[28] => Equal16.IN12
icNumber[29] => Equal0.IN9
icNumber[29] => Equal1.IN11
icNumber[29] => Equal2.IN9
icNumber[29] => Equal3.IN10
icNumber[29] => Equal4.IN7
icNumber[29] => Equal5.IN11
icNumber[29] => Equal6.IN8
icNumber[29] => Equal7.IN10
icNumber[29] => Equal8.IN11
icNumber[29] => Equal9.IN10
icNumber[29] => Equal10.IN8
icNumber[29] => Equal11.IN11
icNumber[29] => Equal12.IN12
icNumber[29] => Equal13.IN8
icNumber[29] => Equal14.IN10
icNumber[29] => Equal15.IN11
icNumber[29] => Equal16.IN11
icNumber[30] => Equal0.IN8
icNumber[30] => Equal1.IN10
icNumber[30] => Equal2.IN8
icNumber[30] => Equal3.IN9
icNumber[30] => Equal4.IN6
icNumber[30] => Equal5.IN10
icNumber[30] => Equal6.IN7
icNumber[30] => Equal7.IN9
icNumber[30] => Equal8.IN10
icNumber[30] => Equal9.IN9
icNumber[30] => Equal10.IN7
icNumber[30] => Equal11.IN10
icNumber[30] => Equal12.IN11
icNumber[30] => Equal13.IN7
icNumber[30] => Equal14.IN9
icNumber[30] => Equal15.IN10
icNumber[30] => Equal16.IN10
icNumber[31] => Equal0.IN7
icNumber[31] => Equal1.IN9
icNumber[31] => Equal2.IN7
icNumber[31] => Equal3.IN8
icNumber[31] => Equal4.IN5
icNumber[31] => Equal5.IN9
icNumber[31] => Equal6.IN6
icNumber[31] => Equal7.IN8
icNumber[31] => Equal8.IN9
icNumber[31] => Equal9.IN8
icNumber[31] => Equal10.IN6
icNumber[31] => Equal11.IN9
icNumber[31] => Equal12.IN10
icNumber[31] => Equal13.IN6
icNumber[31] => Equal14.IN8
icNumber[31] => Equal15.IN9
icNumber[31] => Equal16.IN9
gate[0] <= gate.DB_MAX_OUTPUT_PORT_TYPE
gate[1] <= gate.DB_MAX_OUTPUT_PORT_TYPE
gate[2] <= gate.DB_MAX_OUTPUT_PORT_TYPE
tester[0] <= tester.DB_MAX_OUTPUT_PORT_TYPE
tester[1] <= tester.DB_MAX_OUTPUT_PORT_TYPE
tester[2] <= tester.DB_MAX_OUTPUT_PORT_TYPE
to_LCD <= to_LCD.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1
IN1 <= IN1~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN2 <= IN2~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN3 <= IN3~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN4 <= IN4~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN5 <= IN5~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN6 <= IN6~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN8 <= IN8~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN9 <= IN9~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN10 <= IN10~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN11 <= IN11~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN12 <= IN12~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN13 <= IN13~reg0.DB_MAX_OUTPUT_PORT_TYPE
OP1 => ~NO_FANOUT~
OP2 => OP2.IN1
OP3 => OP3.IN1
OP4 => OP4.IN1
OP5 => ~NO_FANOUT~
OP6 => OP6.IN4
OP8 => OP8.IN5
OP9 => ~NO_FANOUT~
OP10 => OP10.IN1
OP11 => OP11.IN1
OP12 => OP12.IN2
OP13 => ~NO_FANOUT~
pass1 <= pass1~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass2 <= pass2~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass3 <= pass3~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass4 <= pass4~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass5 <= pass5~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass6 <= pass6~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail1 <= fail1~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail2 <= fail2~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail3 <= fail3~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail4 <= fail4~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail5 <= fail5~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail6 <= fail6~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass <= pass~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail <= fail~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => clk.IN5
gate[0] => gate[0].IN4
gate[1] => gate[1].IN4
gate[2] => gate[2].IN4
tester[0] => tester[0].IN1
tester[1] => tester[1].IN1
tester[2] => tester[2].IN1
icg => pass1.OUTPUTSELECT
icg => pass2.OUTPUTSELECT
icg => pass3.OUTPUTSELECT
icg => pass4.OUTPUTSELECT
icg => pass5.OUTPUTSELECT
icg => pass6.OUTPUTSELECT
icg => fail1.OUTPUTSELECT
icg => fail2.OUTPUTSELECT
icg => fail3.OUTPUTSELECT
icg => fail4.OUTPUTSELECT
icg => fail5.OUTPUTSELECT
icg => fail6.OUTPUTSELECT
icg => pass.OUTPUTSELECT
icg => fail.OUTPUTSELECT


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|mux_test:mt1
select[0] => Equal0.IN2
select[0] => Equal1.IN0
select[0] => Equal2.IN2
select[0] => Equal3.IN1
select[0] => Equal4.IN2
select[0] => Equal5.IN2
select[1] => Equal0.IN1
select[1] => Equal1.IN2
select[1] => Equal2.IN0
select[1] => Equal3.IN0
select[1] => Equal4.IN1
select[1] => Equal5.IN1
select[2] => Equal0.IN0
select[2] => Equal1.IN1
select[2] => Equal2.IN1
select[2] => Equal3.IN2
select[2] => Equal4.IN0
select[2] => Equal5.IN0
W_NOT <= W_NOT$latch.DB_MAX_OUTPUT_PORT_TYPE
W_TWO <= W_TWO$latch.DB_MAX_OUTPUT_PORT_TYPE
W_THREE <= W_THREE$latch.DB_MAX_OUTPUT_PORT_TYPE
W_FOUR <= W_FOUR$latch.DB_MAX_OUTPUT_PORT_TYPE
W_EIGHT <= W_EIGHT$latch.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|two_input_checker:two_input_checker_inst
A1 <= A1~reg0.DB_MAX_OUTPUT_PORT_TYPE
A2 <= A2~reg0.DB_MAX_OUTPUT_PORT_TYPE
A3 <= A3~reg0.DB_MAX_OUTPUT_PORT_TYPE
A4 <= A4~reg0.DB_MAX_OUTPUT_PORT_TYPE
B1 <= B1~reg0.DB_MAX_OUTPUT_PORT_TYPE
B2 <= B2~reg0.DB_MAX_OUTPUT_PORT_TYPE
B3 <= B3~reg0.DB_MAX_OUTPUT_PORT_TYPE
B4 <= B4~reg0.DB_MAX_OUTPUT_PORT_TYPE
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op4 => output_got4.DATAB
op4 => output_got4.DATAB
op4 => output_got4.DATAB
op4 => output_got4.DATAB
pass1 <= pass1~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass2 <= pass2~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass3 <= pass3~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass4 <= pass4~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail1 <= fail1~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail2 <= fail2~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail3 <= fail3~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail4 <= fail4~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass <= pass~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail <= fail~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => fail~reg0.CLK
clk => pass~reg0.CLK
clk => pass4~reg0.CLK
clk => fail4~reg0.CLK
clk => pass3~reg0.CLK
clk => fail3~reg0.CLK
clk => pass2~reg0.CLK
clk => fail2~reg0.CLK
clk => pass1~reg0.CLK
clk => fail1~reg0.CLK
clk => input_pattern[0].CLK
clk => input_pattern[1].CLK
clk => output_ori[0].CLK
clk => output_ori[1].CLK
clk => output_ori[2].CLK
clk => output_ori[3].CLK
clk => output_got4[0].CLK
clk => output_got4[1].CLK
clk => output_got4[2].CLK
clk => output_got4[3].CLK
clk => output_got3[0].CLK
clk => output_got3[1].CLK
clk => output_got3[2].CLK
clk => output_got3[3].CLK
clk => output_got2[0].CLK
clk => output_got2[1].CLK
clk => output_got2[2].CLK
clk => output_got2[3].CLK
clk => output_got1[0].CLK
clk => output_got1[1].CLK
clk => output_got1[2].CLK
clk => output_got1[3].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
clk => B4~reg0.CLK
clk => A4~reg0.CLK
clk => B3~reg0.CLK
clk => A3~reg0.CLK
clk => B2~reg0.CLK
clk => A2~reg0.CLK
clk => B1~reg0.CLK
clk => A1~reg0.CLK
clk => state~1.DATAIN
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => fail1.OUTPUTSELECT
enable => pass1.OUTPUTSELECT
enable => fail2.OUTPUTSELECT
enable => pass2.OUTPUTSELECT
enable => fail3.OUTPUTSELECT
enable => pass3.OUTPUTSELECT
enable => fail4.OUTPUTSELECT
enable => pass4.OUTPUTSELECT
enable => pass.OUTPUTSELECT
enable => fail.OUTPUTSELECT
enable => output_ori[0].ENA
enable => output_ori[1].ENA
enable => output_ori[2].ENA
enable => output_ori[3].ENA
enable => output_got4[0].ENA
enable => output_got4[1].ENA
enable => output_got4[2].ENA
enable => output_got4[3].ENA
enable => output_got3[0].ENA
enable => output_got3[1].ENA
enable => output_got3[2].ENA
enable => output_got3[3].ENA
enable => output_got2[0].ENA
enable => output_got2[1].ENA
enable => output_got2[2].ENA
enable => output_got2[3].ENA
enable => output_got1[0].ENA
enable => output_got1[1].ENA
enable => output_got1[2].ENA
enable => output_got1[3].ENA
enable => counter[0].ENA
enable => counter[1].ENA
enable => counter[2].ENA
enable => counter[3].ENA
enable => counter[4].ENA
enable => counter[5].ENA
enable => counter[6].ENA
enable => counter[7].ENA
enable => counter[8].ENA
enable => counter[9].ENA
enable => counter[10].ENA
enable => counter[11].ENA
enable => counter[12].ENA
enable => counter[13].ENA
enable => counter[14].ENA
enable => counter[15].ENA
enable => counter[16].ENA
enable => counter[17].ENA
enable => counter[18].ENA
enable => counter[19].ENA
enable => counter[20].ENA
enable => counter[21].ENA
enable => counter[22].ENA
enable => counter[23].ENA
enable => counter[24].ENA
enable => counter[25].ENA
enable => counter[26].ENA
enable => counter[27].ENA
enable => counter[28].ENA
enable => counter[29].ENA
enable => counter[30].ENA
enable => counter[31].ENA
gateSelect[0] => gateSelect[0].IN1
gateSelect[1] => gateSelect[1].IN1
gateSelect[2] => gateSelect[2].IN1


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|two_input_checker:two_input_checker_inst|two_input_and:and2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|two_input_checker:two_input_checker_inst|two_input_or:or2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|two_input_checker:two_input_checker_inst|two_input_nand:nand2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|two_input_checker:two_input_checker_inst|two_input_nor:nor2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|two_input_checker:two_input_checker_inst|two_input_xor:xor2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|two_input_checker:two_input_checker_inst|two_input_xnor:xnor2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|two_input_checker:two_input_checker_inst|mux_gate:m_gate1
select[0] => Equal0.IN2
select[0] => Equal1.IN0
select[0] => Equal2.IN2
select[0] => Equal3.IN1
select[0] => Equal4.IN2
select[0] => Equal5.IN1
select[1] => Equal0.IN1
select[1] => Equal1.IN2
select[1] => Equal2.IN0
select[1] => Equal3.IN0
select[1] => Equal4.IN1
select[1] => Equal5.IN2
select[2] => Equal0.IN0
select[2] => Equal1.IN1
select[2] => Equal2.IN1
select[2] => Equal3.IN2
select[2] => Equal4.IN0
select[2] => Equal5.IN0
W_AND => Y.DATAB
W_OR => Y.DATAB
W_NAND => Y.DATAB
W_NOR => Y.DATAB
W_XOR => Y.DATAB
W_XNOR => Y.DATAA
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|three_input_checker:three_input_checker_inst
A1 <= A1~reg0.DB_MAX_OUTPUT_PORT_TYPE
A2 <= A2~reg0.DB_MAX_OUTPUT_PORT_TYPE
A3 <= A3~reg0.DB_MAX_OUTPUT_PORT_TYPE
B1 <= B1~reg0.DB_MAX_OUTPUT_PORT_TYPE
B2 <= B2~reg0.DB_MAX_OUTPUT_PORT_TYPE
B3 <= B3~reg0.DB_MAX_OUTPUT_PORT_TYPE
C1 <= C1~reg0.DB_MAX_OUTPUT_PORT_TYPE
C2 <= C2~reg0.DB_MAX_OUTPUT_PORT_TYPE
C3 <= C3~reg0.DB_MAX_OUTPUT_PORT_TYPE
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
pass1 <= pass1~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass2 <= pass2~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass3 <= pass3~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail1 <= fail1~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail2 <= fail2~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail3 <= fail3~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass <= pass~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail <= fail~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => fail~reg0.CLK
clk => pass~reg0.CLK
clk => pass3~reg0.CLK
clk => fail3~reg0.CLK
clk => pass2~reg0.CLK
clk => fail2~reg0.CLK
clk => pass1~reg0.CLK
clk => fail1~reg0.CLK
clk => input_pattern[0].CLK
clk => input_pattern[1].CLK
clk => input_pattern[2].CLK
clk => output_ori[0].CLK
clk => output_ori[1].CLK
clk => output_ori[2].CLK
clk => output_ori[3].CLK
clk => output_ori[4].CLK
clk => output_ori[5].CLK
clk => output_ori[6].CLK
clk => output_ori[7].CLK
clk => output_got3[0].CLK
clk => output_got3[1].CLK
clk => output_got3[2].CLK
clk => output_got3[3].CLK
clk => output_got3[4].CLK
clk => output_got3[5].CLK
clk => output_got3[6].CLK
clk => output_got3[7].CLK
clk => output_got2[0].CLK
clk => output_got2[1].CLK
clk => output_got2[2].CLK
clk => output_got2[3].CLK
clk => output_got2[4].CLK
clk => output_got2[5].CLK
clk => output_got2[6].CLK
clk => output_got2[7].CLK
clk => output_got1[0].CLK
clk => output_got1[1].CLK
clk => output_got1[2].CLK
clk => output_got1[3].CLK
clk => output_got1[4].CLK
clk => output_got1[5].CLK
clk => output_got1[6].CLK
clk => output_got1[7].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
clk => C3~reg0.CLK
clk => B3~reg0.CLK
clk => A3~reg0.CLK
clk => C2~reg0.CLK
clk => B2~reg0.CLK
clk => A2~reg0.CLK
clk => C1~reg0.CLK
clk => B1~reg0.CLK
clk => A1~reg0.CLK
clk => state~1.DATAIN
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => fail1.OUTPUTSELECT
enable => pass1.OUTPUTSELECT
enable => fail2.OUTPUTSELECT
enable => pass2.OUTPUTSELECT
enable => fail3.OUTPUTSELECT
enable => pass3.OUTPUTSELECT
enable => pass.OUTPUTSELECT
enable => fail.OUTPUTSELECT
enable => output_ori[0].ENA
enable => output_ori[1].ENA
enable => output_ori[2].ENA
enable => output_ori[3].ENA
enable => output_ori[4].ENA
enable => output_ori[5].ENA
enable => output_ori[6].ENA
enable => output_ori[7].ENA
enable => output_got3[0].ENA
enable => output_got3[1].ENA
enable => output_got3[2].ENA
enable => output_got3[3].ENA
enable => output_got3[4].ENA
enable => output_got3[5].ENA
enable => output_got3[6].ENA
enable => output_got3[7].ENA
enable => output_got2[0].ENA
enable => output_got2[1].ENA
enable => output_got2[2].ENA
enable => output_got2[3].ENA
enable => output_got2[4].ENA
enable => output_got2[5].ENA
enable => output_got2[6].ENA
enable => output_got2[7].ENA
enable => output_got1[0].ENA
enable => output_got1[1].ENA
enable => output_got1[2].ENA
enable => output_got1[3].ENA
enable => output_got1[4].ENA
enable => output_got1[5].ENA
enable => output_got1[6].ENA
enable => output_got1[7].ENA
enable => counter[0].ENA
enable => counter[1].ENA
enable => counter[2].ENA
enable => counter[3].ENA
enable => counter[4].ENA
enable => counter[5].ENA
enable => counter[6].ENA
enable => counter[7].ENA
enable => counter[8].ENA
enable => counter[9].ENA
enable => counter[10].ENA
enable => counter[11].ENA
enable => counter[12].ENA
enable => counter[13].ENA
enable => counter[14].ENA
enable => counter[15].ENA
enable => counter[16].ENA
enable => counter[17].ENA
enable => counter[18].ENA
enable => counter[19].ENA
enable => counter[20].ENA
enable => counter[21].ENA
enable => counter[22].ENA
enable => counter[23].ENA
enable => counter[24].ENA
enable => counter[25].ENA
enable => counter[26].ENA
enable => counter[27].ENA
enable => counter[28].ENA
enable => counter[29].ENA
enable => counter[30].ENA
enable => counter[31].ENA
gateSelect[0] => gateSelect[0].IN1
gateSelect[1] => gateSelect[1].IN1
gateSelect[2] => gateSelect[2].IN1


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|three_input_checker:three_input_checker_inst|three_input_and:and3
A => Y.IN0
B => Y.IN1
C => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|three_input_checker:three_input_checker_inst|three_input_or:or3
A => Y.IN0
B => Y.IN1
C => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|three_input_checker:three_input_checker_inst|three_input_nand:nand3
A => Y.IN0
B => Y.IN1
C => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|three_input_checker:three_input_checker_inst|three_input_nor:nor3
A => Y.IN0
B => Y.IN1
C => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|three_input_checker:three_input_checker_inst|three_input_xor:xor3
A => Y.IN0
B => Y.IN1
C => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|three_input_checker:three_input_checker_inst|mux_gate:m_gate2
select[0] => Equal0.IN2
select[0] => Equal1.IN0
select[0] => Equal2.IN2
select[0] => Equal3.IN1
select[0] => Equal4.IN2
select[0] => Equal5.IN1
select[1] => Equal0.IN1
select[1] => Equal1.IN2
select[1] => Equal2.IN0
select[1] => Equal3.IN0
select[1] => Equal4.IN1
select[1] => Equal5.IN2
select[2] => Equal0.IN0
select[2] => Equal1.IN1
select[2] => Equal2.IN1
select[2] => Equal3.IN2
select[2] => Equal4.IN0
select[2] => Equal5.IN0
W_AND => Y.DATAB
W_OR => Y.DATAB
W_NAND => Y.DATAB
W_NOR => Y.DATAB
W_XOR => Y.DATAB
W_XNOR => Y.DATAA
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|four_input_checker:four_input_checker_inst
A1 <= A1~reg0.DB_MAX_OUTPUT_PORT_TYPE
A2 <= A2~reg0.DB_MAX_OUTPUT_PORT_TYPE
B1 <= B1~reg0.DB_MAX_OUTPUT_PORT_TYPE
B2 <= B2~reg0.DB_MAX_OUTPUT_PORT_TYPE
C1 <= C1~reg0.DB_MAX_OUTPUT_PORT_TYPE
C2 <= C2~reg0.DB_MAX_OUTPUT_PORT_TYPE
D1 <= D1~reg0.DB_MAX_OUTPUT_PORT_TYPE
D2 <= D2~reg0.DB_MAX_OUTPUT_PORT_TYPE
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
pass1 <= pass1~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass2 <= pass2~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail1 <= fail1~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail2 <= fail2~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass <= pass~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail <= fail~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => fail~reg0.CLK
clk => pass~reg0.CLK
clk => pass2~reg0.CLK
clk => fail2~reg0.CLK
clk => pass1~reg0.CLK
clk => fail1~reg0.CLK
clk => input_pattern[0].CLK
clk => input_pattern[1].CLK
clk => input_pattern[2].CLK
clk => input_pattern[3].CLK
clk => output_ori[0].CLK
clk => output_ori[1].CLK
clk => output_ori[2].CLK
clk => output_ori[3].CLK
clk => output_ori[4].CLK
clk => output_ori[5].CLK
clk => output_ori[6].CLK
clk => output_ori[7].CLK
clk => output_ori[8].CLK
clk => output_ori[9].CLK
clk => output_ori[10].CLK
clk => output_ori[11].CLK
clk => output_ori[12].CLK
clk => output_ori[13].CLK
clk => output_ori[14].CLK
clk => output_ori[15].CLK
clk => output_got2[0].CLK
clk => output_got2[1].CLK
clk => output_got2[2].CLK
clk => output_got2[3].CLK
clk => output_got2[4].CLK
clk => output_got2[5].CLK
clk => output_got2[6].CLK
clk => output_got2[7].CLK
clk => output_got2[8].CLK
clk => output_got2[9].CLK
clk => output_got2[10].CLK
clk => output_got2[11].CLK
clk => output_got2[12].CLK
clk => output_got2[13].CLK
clk => output_got2[14].CLK
clk => output_got2[15].CLK
clk => output_got1[0].CLK
clk => output_got1[1].CLK
clk => output_got1[2].CLK
clk => output_got1[3].CLK
clk => output_got1[4].CLK
clk => output_got1[5].CLK
clk => output_got1[6].CLK
clk => output_got1[7].CLK
clk => output_got1[8].CLK
clk => output_got1[9].CLK
clk => output_got1[10].CLK
clk => output_got1[11].CLK
clk => output_got1[12].CLK
clk => output_got1[13].CLK
clk => output_got1[14].CLK
clk => output_got1[15].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
clk => D2~reg0.CLK
clk => C2~reg0.CLK
clk => B2~reg0.CLK
clk => A2~reg0.CLK
clk => D1~reg0.CLK
clk => C1~reg0.CLK
clk => B1~reg0.CLK
clk => A1~reg0.CLK
clk => state~1.DATAIN
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => fail1.OUTPUTSELECT
enable => pass1.OUTPUTSELECT
enable => fail2.OUTPUTSELECT
enable => pass2.OUTPUTSELECT
enable => pass.OUTPUTSELECT
enable => fail.OUTPUTSELECT
enable => output_ori[0].ENA
enable => output_ori[1].ENA
enable => output_ori[2].ENA
enable => output_ori[3].ENA
enable => output_ori[4].ENA
enable => output_ori[5].ENA
enable => output_ori[6].ENA
enable => output_ori[7].ENA
enable => output_ori[8].ENA
enable => output_ori[9].ENA
enable => output_ori[10].ENA
enable => output_ori[11].ENA
enable => output_ori[12].ENA
enable => output_ori[13].ENA
enable => output_ori[14].ENA
enable => output_ori[15].ENA
enable => output_got2[0].ENA
enable => output_got2[1].ENA
enable => output_got2[2].ENA
enable => output_got2[3].ENA
enable => output_got2[4].ENA
enable => output_got2[5].ENA
enable => output_got2[6].ENA
enable => output_got2[7].ENA
enable => output_got2[8].ENA
enable => output_got2[9].ENA
enable => output_got2[10].ENA
enable => output_got2[11].ENA
enable => output_got2[12].ENA
enable => output_got2[13].ENA
enable => output_got2[14].ENA
enable => output_got2[15].ENA
enable => output_got1[0].ENA
enable => output_got1[1].ENA
enable => output_got1[2].ENA
enable => output_got1[3].ENA
enable => output_got1[4].ENA
enable => output_got1[5].ENA
enable => output_got1[6].ENA
enable => output_got1[7].ENA
enable => output_got1[8].ENA
enable => output_got1[9].ENA
enable => output_got1[10].ENA
enable => output_got1[11].ENA
enable => output_got1[12].ENA
enable => output_got1[13].ENA
enable => output_got1[14].ENA
enable => output_got1[15].ENA
enable => counter[0].ENA
enable => counter[1].ENA
enable => counter[2].ENA
enable => counter[3].ENA
enable => counter[4].ENA
enable => counter[5].ENA
enable => counter[6].ENA
enable => counter[7].ENA
enable => counter[8].ENA
enable => counter[9].ENA
enable => counter[10].ENA
enable => counter[11].ENA
enable => counter[12].ENA
enable => counter[13].ENA
enable => counter[14].ENA
enable => counter[15].ENA
enable => counter[16].ENA
enable => counter[17].ENA
enable => counter[18].ENA
enable => counter[19].ENA
enable => counter[20].ENA
enable => counter[21].ENA
enable => counter[22].ENA
enable => counter[23].ENA
enable => counter[24].ENA
enable => counter[25].ENA
enable => counter[26].ENA
enable => counter[27].ENA
enable => counter[28].ENA
enable => counter[29].ENA
enable => counter[30].ENA
enable => counter[31].ENA
gateSelect[0] => gateSelect[0].IN1
gateSelect[1] => gateSelect[1].IN1
gateSelect[2] => gateSelect[2].IN1


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|four_input_checker:four_input_checker_inst|four_input_and:and3
A => Y.IN0
B => Y.IN1
C => Y.IN1
D => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|four_input_checker:four_input_checker_inst|four_input_nand:nand3
A => Y.IN0
B => Y.IN1
C => Y.IN1
D => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|four_input_checker:four_input_checker_inst|mux_gate:m_gate3
select[0] => Equal0.IN2
select[0] => Equal1.IN0
select[0] => Equal2.IN2
select[0] => Equal3.IN1
select[0] => Equal4.IN2
select[0] => Equal5.IN1
select[1] => Equal0.IN1
select[1] => Equal1.IN2
select[1] => Equal2.IN0
select[1] => Equal3.IN0
select[1] => Equal4.IN1
select[1] => Equal5.IN2
select[2] => Equal0.IN0
select[2] => Equal1.IN1
select[2] => Equal2.IN1
select[2] => Equal3.IN2
select[2] => Equal4.IN0
select[2] => Equal5.IN0
W_AND => Y.DATAB
W_OR => Y.DATAB
W_NAND => Y.DATAB
W_NOR => Y.DATAB
W_XOR => Y.DATAB
W_XNOR => Y.DATAA
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|eight_input_checker:eight_input_checker_inst
A1 <= A1~reg0.DB_MAX_OUTPUT_PORT_TYPE
B1 <= B1~reg0.DB_MAX_OUTPUT_PORT_TYPE
C1 <= C1~reg0.DB_MAX_OUTPUT_PORT_TYPE
D1 <= D1~reg0.DB_MAX_OUTPUT_PORT_TYPE
E1 <= E1~reg0.DB_MAX_OUTPUT_PORT_TYPE
F1 <= F1~reg0.DB_MAX_OUTPUT_PORT_TYPE
G1 <= G1~reg0.DB_MAX_OUTPUT_PORT_TYPE
H1 <= H1~reg0.DB_MAX_OUTPUT_PORT_TYPE
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
pass1 <= pass1~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail1 <= fail1~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass <= pass~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail <= fail~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => fail~reg0.CLK
clk => pass~reg0.CLK
clk => pass1~reg0.CLK
clk => fail1~reg0.CLK
clk => input_pattern[0].CLK
clk => input_pattern[1].CLK
clk => input_pattern[2].CLK
clk => input_pattern[3].CLK
clk => input_pattern[4].CLK
clk => input_pattern[5].CLK
clk => input_pattern[6].CLK
clk => input_pattern[7].CLK
clk => output_ori[0].CLK
clk => output_ori[1].CLK
clk => output_ori[2].CLK
clk => output_ori[3].CLK
clk => output_ori[4].CLK
clk => output_ori[5].CLK
clk => output_ori[6].CLK
clk => output_ori[7].CLK
clk => output_ori[8].CLK
clk => output_ori[9].CLK
clk => output_ori[10].CLK
clk => output_ori[11].CLK
clk => output_ori[12].CLK
clk => output_ori[13].CLK
clk => output_ori[14].CLK
clk => output_ori[15].CLK
clk => output_ori[16].CLK
clk => output_ori[17].CLK
clk => output_ori[18].CLK
clk => output_ori[19].CLK
clk => output_ori[20].CLK
clk => output_ori[21].CLK
clk => output_ori[22].CLK
clk => output_ori[23].CLK
clk => output_ori[24].CLK
clk => output_ori[25].CLK
clk => output_ori[26].CLK
clk => output_ori[27].CLK
clk => output_ori[28].CLK
clk => output_ori[29].CLK
clk => output_ori[30].CLK
clk => output_ori[31].CLK
clk => output_got1[0].CLK
clk => output_got1[1].CLK
clk => output_got1[2].CLK
clk => output_got1[3].CLK
clk => output_got1[4].CLK
clk => output_got1[5].CLK
clk => output_got1[6].CLK
clk => output_got1[7].CLK
clk => output_got1[8].CLK
clk => output_got1[9].CLK
clk => output_got1[10].CLK
clk => output_got1[11].CLK
clk => output_got1[12].CLK
clk => output_got1[13].CLK
clk => output_got1[14].CLK
clk => output_got1[15].CLK
clk => output_got1[16].CLK
clk => output_got1[17].CLK
clk => output_got1[18].CLK
clk => output_got1[19].CLK
clk => output_got1[20].CLK
clk => output_got1[21].CLK
clk => output_got1[22].CLK
clk => output_got1[23].CLK
clk => output_got1[24].CLK
clk => output_got1[25].CLK
clk => output_got1[26].CLK
clk => output_got1[27].CLK
clk => output_got1[28].CLK
clk => output_got1[29].CLK
clk => output_got1[30].CLK
clk => output_got1[31].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
clk => H1~reg0.CLK
clk => G1~reg0.CLK
clk => F1~reg0.CLK
clk => E1~reg0.CLK
clk => D1~reg0.CLK
clk => C1~reg0.CLK
clk => B1~reg0.CLK
clk => A1~reg0.CLK
clk => state~1.DATAIN
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => fail1.OUTPUTSELECT
enable => pass1.OUTPUTSELECT
enable => pass.OUTPUTSELECT
enable => fail.OUTPUTSELECT
enable => output_ori[0].ENA
enable => output_ori[1].ENA
enable => output_ori[2].ENA
enable => output_ori[3].ENA
enable => output_ori[4].ENA
enable => output_ori[5].ENA
enable => output_ori[6].ENA
enable => output_ori[7].ENA
enable => output_ori[8].ENA
enable => output_ori[9].ENA
enable => output_ori[10].ENA
enable => output_ori[11].ENA
enable => output_ori[12].ENA
enable => output_ori[13].ENA
enable => output_ori[14].ENA
enable => output_ori[15].ENA
enable => output_ori[16].ENA
enable => output_ori[17].ENA
enable => output_ori[18].ENA
enable => output_ori[19].ENA
enable => output_ori[20].ENA
enable => output_ori[21].ENA
enable => output_ori[22].ENA
enable => output_ori[23].ENA
enable => output_ori[24].ENA
enable => output_ori[25].ENA
enable => output_ori[26].ENA
enable => output_ori[27].ENA
enable => output_ori[28].ENA
enable => output_ori[29].ENA
enable => output_ori[30].ENA
enable => output_ori[31].ENA
enable => output_got1[0].ENA
enable => output_got1[1].ENA
enable => output_got1[2].ENA
enable => output_got1[3].ENA
enable => output_got1[4].ENA
enable => output_got1[5].ENA
enable => output_got1[6].ENA
enable => output_got1[7].ENA
enable => output_got1[8].ENA
enable => output_got1[9].ENA
enable => output_got1[10].ENA
enable => output_got1[11].ENA
enable => output_got1[12].ENA
enable => output_got1[13].ENA
enable => output_got1[14].ENA
enable => output_got1[15].ENA
enable => output_got1[16].ENA
enable => output_got1[17].ENA
enable => output_got1[18].ENA
enable => output_got1[19].ENA
enable => output_got1[20].ENA
enable => output_got1[21].ENA
enable => output_got1[22].ENA
enable => output_got1[23].ENA
enable => output_got1[24].ENA
enable => output_got1[25].ENA
enable => output_got1[26].ENA
enable => output_got1[27].ENA
enable => output_got1[28].ENA
enable => output_got1[29].ENA
enable => output_got1[30].ENA
enable => output_got1[31].ENA
enable => counter[0].ENA
enable => counter[1].ENA
enable => counter[2].ENA
enable => counter[3].ENA
enable => counter[4].ENA
enable => counter[5].ENA
enable => counter[6].ENA
enable => counter[7].ENA
enable => counter[8].ENA
enable => counter[9].ENA
enable => counter[10].ENA
enable => counter[11].ENA
enable => counter[12].ENA
enable => counter[13].ENA
enable => counter[14].ENA
enable => counter[15].ENA
enable => counter[16].ENA
enable => counter[17].ENA
enable => counter[18].ENA
enable => counter[19].ENA
enable => counter[20].ENA
enable => counter[21].ENA
enable => counter[22].ENA
enable => counter[23].ENA
enable => counter[24].ENA
enable => counter[25].ENA
enable => counter[26].ENA
enable => counter[27].ENA
enable => counter[28].ENA
enable => counter[29].ENA
enable => counter[30].ENA
enable => counter[31].ENA
gateSelect[0] => gateSelect[0].IN1
gateSelect[1] => gateSelect[1].IN1
gateSelect[2] => gateSelect[2].IN1


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|eight_input_checker:eight_input_checker_inst|eight_input_nand:nand3
A => Y.IN0
B => Y.IN1
C => Y.IN1
D => Y.IN1
E => Y.IN1
F => Y.IN1
G => Y.IN1
H => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|eight_input_checker:eight_input_checker_inst|mux_gate:m_gate2
select[0] => Equal0.IN2
select[0] => Equal1.IN0
select[0] => Equal2.IN2
select[0] => Equal3.IN1
select[0] => Equal4.IN2
select[0] => Equal5.IN1
select[1] => Equal0.IN1
select[1] => Equal1.IN2
select[1] => Equal2.IN0
select[1] => Equal3.IN0
select[1] => Equal4.IN1
select[1] => Equal5.IN2
select[2] => Equal0.IN0
select[2] => Equal1.IN1
select[2] => Equal2.IN1
select[2] => Equal3.IN2
select[2] => Equal4.IN0
select[2] => Equal5.IN0
W_AND => Y.DATAB
W_OR => Y.DATAB
W_NAND => Y.DATAB
W_NOR => Y.DATAB
W_XOR => Y.DATAB
W_XNOR => Y.DATAA
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|not_gate_checker:not_gate_checker_inst
A1 <= A1~reg0.DB_MAX_OUTPUT_PORT_TYPE
A2 <= A2~reg0.DB_MAX_OUTPUT_PORT_TYPE
A3 <= A3~reg0.DB_MAX_OUTPUT_PORT_TYPE
A4 <= A4~reg0.DB_MAX_OUTPUT_PORT_TYPE
A5 <= A5~reg0.DB_MAX_OUTPUT_PORT_TYPE
A6 <= A6~reg0.DB_MAX_OUTPUT_PORT_TYPE
op1 => output_got1.DATAB
op1 => output_got1.DATAA
op2 => output_got2.DATAB
op2 => output_got2.DATAA
op3 => output_got3.DATAB
op3 => output_got3.DATAA
op4 => output_got4.DATAB
op4 => output_got4.DATAA
op4 => output_got5.DATAA
op4 => output_got6.DATAA
op5 => output_got5.DATAB
op6 => output_got6.DATAB
pass1 <= pass1~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass2 <= pass2~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass3 <= pass3~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass4 <= pass4~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass5 <= pass5~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass6 <= pass6~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail1 <= fail1~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail2 <= fail2~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail3 <= fail3~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail4 <= fail4~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail5 <= fail5~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail6 <= fail6~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass <= pass~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail <= fail~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => state.CLK
clk => input_pattern.CLK
clk => fail~reg0.CLK
clk => pass~reg0.CLK
clk => pass6~reg0.CLK
clk => fail6~reg0.CLK
clk => pass5~reg0.CLK
clk => fail5~reg0.CLK
clk => pass4~reg0.CLK
clk => fail4~reg0.CLK
clk => pass3~reg0.CLK
clk => fail3~reg0.CLK
clk => pass2~reg0.CLK
clk => fail2~reg0.CLK
clk => pass1~reg0.CLK
clk => fail1~reg0.CLK
clk => output_ori[0].CLK
clk => output_ori[1].CLK
clk => output_got6[0].CLK
clk => output_got6[1].CLK
clk => output_got5[0].CLK
clk => output_got5[1].CLK
clk => output_got4[0].CLK
clk => output_got4[1].CLK
clk => output_got3[0].CLK
clk => output_got3[1].CLK
clk => output_got2[0].CLK
clk => output_got2[1].CLK
clk => output_got1[0].CLK
clk => output_got1[1].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
clk => A6~reg0.CLK
clk => A5~reg0.CLK
clk => A4~reg0.CLK
clk => A3~reg0.CLK
clk => A2~reg0.CLK
clk => A1~reg0.CLK
enable => fail1.OUTPUTSELECT
enable => pass1.OUTPUTSELECT
enable => fail2.OUTPUTSELECT
enable => pass2.OUTPUTSELECT
enable => fail3.OUTPUTSELECT
enable => pass3.OUTPUTSELECT
enable => fail4.OUTPUTSELECT
enable => pass4.OUTPUTSELECT
enable => fail5.OUTPUTSELECT
enable => pass5.OUTPUTSELECT
enable => fail6.OUTPUTSELECT
enable => pass6.OUTPUTSELECT
enable => pass.OUTPUTSELECT
enable => fail.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => state.ENA
enable => output_ori[0].ENA
enable => output_ori[1].ENA
enable => output_got6[0].ENA
enable => output_got6[1].ENA
enable => output_got5[0].ENA
enable => output_got5[1].ENA
enable => output_got4[0].ENA
enable => output_got4[1].ENA
enable => output_got3[0].ENA
enable => output_got3[1].ENA
enable => output_got2[0].ENA
enable => output_got2[1].ENA
enable => output_got1[0].ENA
enable => output_got1[1].ENA
enable => counter[0].ENA
enable => counter[1].ENA
enable => counter[2].ENA
enable => counter[3].ENA
enable => counter[4].ENA
enable => counter[5].ENA
enable => counter[6].ENA
enable => counter[7].ENA
enable => counter[8].ENA
enable => counter[9].ENA
enable => counter[10].ENA
enable => counter[11].ENA
enable => counter[12].ENA
enable => counter[13].ENA
enable => counter[14].ENA
enable => counter[15].ENA
enable => counter[16].ENA
enable => counter[17].ENA
enable => counter[18].ENA
enable => counter[19].ENA
enable => counter[20].ENA
enable => counter[21].ENA
enable => counter[22].ENA
enable => counter[23].ENA
enable => counter[24].ENA
enable => counter[25].ENA
enable => counter[26].ENA
enable => counter[27].ENA
enable => counter[28].ENA
enable => counter[29].ENA
enable => counter[30].ENA
enable => counter[31].ENA


|ic_tester|testing_logic:tl1|logical_function_check:lfc1|not_gate_checker:not_gate_checker_inst|not_gate:not_gate
A => Y.DATAIN
Y <= A.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|LCD_MUX:lcdmux1
icg => LCD_STATE.OUTPUTSELECT
icg => LCD_STATE.OUTPUTSELECT
icg => LCD_STATE.OUTPUTSELECT
pass => LCD_STATE.OUTPUTSELECT
pass => LCD_STATE.DATAA
pass => LCD_STATE.DATAA
fail => LCD_STATE.DATAA
LCD_STATE[0] <= LCD_STATE.DB_MAX_OUTPUT_PORT_TYPE
LCD_STATE[1] <= LCD_STATE.DB_MAX_OUTPUT_PORT_TYPE
LCD_STATE[2] <= LCD_STATE.DB_MAX_OUTPUT_PORT_TYPE
LCD_STATE[3] <= <GND>
clk => ~NO_FANOUT~
InvalidIC => LCD_STATE.OUTPUTSELECT
InvalidIC => LCD_STATE.OUTPUTSELECT
InvalidIC => LCD_STATE.OUTPUTSELECT


|ic_tester|LCD_DISPLAY:lcddisplay1
reset => reset.IN1
clock_50 => clock_50.IN1
binary_input[0] => binary_input[0].IN1
binary_input[1] => binary_input[1].IN1
binary_input[2] => binary_input[2].IN1
binary_input[3] => binary_input[3].IN1
hex_input[0] => hex_input[0].IN1
hex_input[1] => hex_input[1].IN1
hex_input[2] => hex_input[2].IN1
hex_input[3] => hex_input[3].IN1
hex_input[4] => hex_input[4].IN1
hex_input[5] => hex_input[5].IN1
hex_input[6] => hex_input[6].IN1
hex_input[7] => hex_input[7].IN1
lcd_rs <= LCD_DISPLAY1:LCD_WRAPPER_INST.lcd_rs
lcd_e <= LCD_DISPLAY1:LCD_WRAPPER_INST.lcd_e
lcd_rw <= LCD_DISPLAY1:LCD_WRAPPER_INST.lcd_rw
lcd_on <= LCD_DISPLAY1:LCD_WRAPPER_INST.lcd_on
lcd_blon <= LCD_DISPLAY1:LCD_WRAPPER_INST.lcd_blon
data_bus_0 <> LCD_DISPLAY1:LCD_WRAPPER_INST.data_bus_0
data_bus_1 <> LCD_DISPLAY1:LCD_WRAPPER_INST.data_bus_1
data_bus_2 <> LCD_DISPLAY1:LCD_WRAPPER_INST.data_bus_2
data_bus_3 <> LCD_DISPLAY1:LCD_WRAPPER_INST.data_bus_3
data_bus_4 <> LCD_DISPLAY1:LCD_WRAPPER_INST.data_bus_4
data_bus_5 <> LCD_DISPLAY1:LCD_WRAPPER_INST.data_bus_5
data_bus_6 <> LCD_DISPLAY1:LCD_WRAPPER_INST.data_bus_6
data_bus_7 <> LCD_DISPLAY1:LCD_WRAPPER_INST.data_bus_7


|ic_tester|LCD_DISPLAY:lcddisplay1|LCD_DISPLAY1:LCD_WRAPPER_INST
reset => reset.IN1
clock_50 => clock_50.IN1
lcd_rs <= LCD_DISPLAY_nty:LCD_WRAPPER_INST.lcd_rs
lcd_e <= LCD_DISPLAY_nty:LCD_WRAPPER_INST.lcd_e
lcd_rw <= LCD_DISPLAY_nty:LCD_WRAPPER_INST.lcd_rw
lcd_on <= LCD_DISPLAY_nty:LCD_WRAPPER_INST.lcd_on
lcd_blon <= LCD_DISPLAY_nty:LCD_WRAPPER_INST.lcd_blon
data_bus_0 <> LCD_DISPLAY_nty:LCD_WRAPPER_INST.data_bus_0
data_bus_1 <> LCD_DISPLAY_nty:LCD_WRAPPER_INST.data_bus_1
data_bus_2 <> LCD_DISPLAY_nty:LCD_WRAPPER_INST.data_bus_2
data_bus_3 <> LCD_DISPLAY_nty:LCD_WRAPPER_INST.data_bus_3
data_bus_4 <> LCD_DISPLAY_nty:LCD_WRAPPER_INST.data_bus_4
data_bus_5 <> LCD_DISPLAY_nty:LCD_WRAPPER_INST.data_bus_5
data_bus_6 <> LCD_DISPLAY_nty:LCD_WRAPPER_INST.data_bus_6
data_bus_7 <> LCD_DISPLAY_nty:LCD_WRAPPER_INST.data_bus_7
binary_input[0] => LCD_CHAR_ARRAY_0.DATAIN
binary_input[1] => LCD_CHAR_ARRAY_1.DATAIN
binary_input[2] => LCD_CHAR_ARRAY_2.DATAIN
binary_input[3] => LCD_CHAR_ARRAY_3.DATAIN
hex_input[0] => Hex_Display_Data_0.DATAIN
hex_input[1] => Hex_Display_Data_1.DATAIN
hex_input[2] => Hex_Display_Data_2.DATAIN
hex_input[3] => Hex_Display_Data_3.DATAIN
hex_input[4] => Hex_Display_Data_4.DATAIN
hex_input[5] => Hex_Display_Data_5.DATAIN
hex_input[6] => Hex_Display_Data_6.DATAIN
hex_input[7] => Hex_Display_Data_7.DATAIN


|ic_tester|LCD_DISPLAY:lcddisplay1|LCD_DISPLAY1:LCD_WRAPPER_INST|LCD_DISPLAY_nty:LCD_WRAPPER_INST
reset => lcd_rw_int.ACLR
reset => lcd_rs~reg0.ACLR
reset => lcd_e~reg0.PRESET
reset => data_bus_value[0].ACLR
reset => data_bus_value[1].ACLR
reset => data_bus_value[2].ACLR
reset => data_bus_value[3].PRESET
reset => data_bus_value[4].PRESET
reset => data_bus_value[5].PRESET
reset => data_bus_value[6].ACLR
reset => data_bus_value[7].ACLR
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_count_400hz.OUTPUTSELECT
reset => clk_400hz_enable.OUTPUTSELECT
reset => next_command~3.DATAIN
reset => state~15.DATAIN
reset => lcd_on~reg0.ENA
reset => char_count[4].ENA
reset => char_count[3].ENA
reset => char_count[2].ENA
reset => char_count[1].ENA
reset => char_count[0].ENA
reset => lcd_blon~reg0.ENA
clock_50 => lcd_on~reg0.CLK
clock_50 => lcd_blon~reg0.CLK
clock_50 => char_count[0].CLK
clock_50 => char_count[1].CLK
clock_50 => char_count[2].CLK
clock_50 => char_count[3].CLK
clock_50 => char_count[4].CLK
clock_50 => lcd_rw_int.CLK
clock_50 => lcd_rs~reg0.CLK
clock_50 => lcd_e~reg0.CLK
clock_50 => data_bus_value[0].CLK
clock_50 => data_bus_value[1].CLK
clock_50 => data_bus_value[2].CLK
clock_50 => data_bus_value[3].CLK
clock_50 => data_bus_value[4].CLK
clock_50 => data_bus_value[5].CLK
clock_50 => data_bus_value[6].CLK
clock_50 => data_bus_value[7].CLK
clock_50 => clk_400hz_enable.CLK
clock_50 => clk_count_400hz[0].CLK
clock_50 => clk_count_400hz[1].CLK
clock_50 => clk_count_400hz[2].CLK
clock_50 => clk_count_400hz[3].CLK
clock_50 => clk_count_400hz[4].CLK
clock_50 => clk_count_400hz[5].CLK
clock_50 => clk_count_400hz[6].CLK
clock_50 => clk_count_400hz[7].CLK
clock_50 => clk_count_400hz[8].CLK
clock_50 => clk_count_400hz[9].CLK
clock_50 => clk_count_400hz[10].CLK
clock_50 => clk_count_400hz[11].CLK
clock_50 => clk_count_400hz[12].CLK
clock_50 => clk_count_400hz[13].CLK
clock_50 => clk_count_400hz[14].CLK
clock_50 => clk_count_400hz[15].CLK
clock_50 => clk_count_400hz[16].CLK
clock_50 => clk_count_400hz[17].CLK
clock_50 => clk_count_400hz[18].CLK
clock_50 => clk_count_400hz[19].CLK
clock_50 => clk_count_400hz[20].CLK
clock_50 => clk_count_400hz[21].CLK
clock_50 => clk_count_400hz[22].CLK
clock_50 => clk_count_400hz[23].CLK
clock_50 => next_command~1.DATAIN
clock_50 => state~13.DATAIN
lcd_rs <= lcd_rs~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_e <= lcd_e~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_rw <= lcd_rw_int.DB_MAX_OUTPUT_PORT_TYPE
lcd_on <= lcd_on~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_blon <= lcd_blon~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_bus_0 <> data_bus_0
data_bus_1 <> data_bus_1
data_bus_2 <> data_bus_2
data_bus_3 <> data_bus_3
data_bus_4 <> data_bus_4
data_bus_5 <> data_bus_5
data_bus_6 <> data_bus_6
data_bus_7 <> data_bus_7
LCD_CHAR_ARRAY_0 => Mux66.IN19
LCD_CHAR_ARRAY_0 => Mux67.IN19
LCD_CHAR_ARRAY_0 => Mux68.IN19
LCD_CHAR_ARRAY_0 => Mux69.IN19
LCD_CHAR_ARRAY_0 => Mux70.IN19
LCD_CHAR_ARRAY_0 => Mux71.IN19
LCD_CHAR_ARRAY_0 => Mux72.IN19
LCD_CHAR_ARRAY_1 => Mux66.IN18
LCD_CHAR_ARRAY_1 => Mux67.IN18
LCD_CHAR_ARRAY_1 => Mux68.IN18
LCD_CHAR_ARRAY_1 => Mux69.IN18
LCD_CHAR_ARRAY_1 => Mux70.IN18
LCD_CHAR_ARRAY_1 => Mux71.IN18
LCD_CHAR_ARRAY_1 => Mux72.IN18
LCD_CHAR_ARRAY_2 => Mux66.IN17
LCD_CHAR_ARRAY_2 => Mux67.IN17
LCD_CHAR_ARRAY_2 => Mux68.IN17
LCD_CHAR_ARRAY_2 => Mux69.IN17
LCD_CHAR_ARRAY_2 => Mux70.IN17
LCD_CHAR_ARRAY_2 => Mux71.IN17
LCD_CHAR_ARRAY_2 => Mux72.IN17
LCD_CHAR_ARRAY_3 => Mux66.IN16
LCD_CHAR_ARRAY_3 => Mux67.IN16
LCD_CHAR_ARRAY_3 => Mux68.IN16
LCD_CHAR_ARRAY_3 => Mux69.IN16
LCD_CHAR_ARRAY_3 => Mux70.IN16
LCD_CHAR_ARRAY_3 => Mux71.IN16
LCD_CHAR_ARRAY_3 => Mux72.IN16
Hex_Display_Data_0 => Mux58.IN36
Hex_Display_Data_0 => Mux65.IN36
Hex_Display_Data_1 => Mux57.IN36
Hex_Display_Data_1 => Mux64.IN36
Hex_Display_Data_2 => Mux56.IN36
Hex_Display_Data_2 => Mux63.IN36
Hex_Display_Data_3 => Mux55.IN36
Hex_Display_Data_3 => Mux62.IN36
Hex_Display_Data_4 => Mux58.IN35
Hex_Display_Data_4 => Mux65.IN35
Hex_Display_Data_5 => Mux57.IN35
Hex_Display_Data_5 => Mux64.IN35
Hex_Display_Data_6 => Mux56.IN35
Hex_Display_Data_6 => Mux63.IN35
Hex_Display_Data_7 => Mux55.IN35
Hex_Display_Data_7 => Mux62.IN35


|ic_tester|PFCount:pfcount1
pass1 => always0.IN0
pass1 => always0.IN0
pass1 => always0.IN0
pass1 => always0.IN0
pass1 => always0.IN0
pass1 => PASS.OUTPUTSELECT
pass1 => PASS.OUTPUTSELECT
pass1 => PASS.OUTPUTSELECT
pass1 => PASS[0].OUTPUTSELECT
pass1 => PASS[1].OUTPUTSELECT
pass1 => PASS[2].OUTPUTSELECT
pass1 => PASS[2].IN1
pass2 => always0.IN1
pass2 => always0.IN0
pass2 => always0.IN0
pass2 => always0.IN0
pass2 => always0.IN0
pass3 => always0.IN1
pass3 => always0.IN1
pass3 => always0.IN1
pass3 => always0.IN0
pass3 => always0.IN0
pass3 => always0.IN0
pass4 => always0.IN1
pass4 => always0.IN1
pass4 => always0.IN1
pass4 => always0.IN1
pass4 => always0.IN1
pass4 => always0.IN1
pass4 => always0.IN1
pass4 => always0.IN0
pass4 => always0.IN0
pass5 => always0.IN1
pass5 => always0.IN1
pass5 => always0.IN1
pass5 => always0.IN1
pass5 => always0.IN1
pass5 => always0.IN1
pass5 => always0.IN1
pass5 => always0.IN1
pass5 => always0.IN1
pass5 => always0.IN1
pass5 => always0.IN1
pass5 => always0.IN1
pass5 => always0.IN1
pass5 => always0.IN1
pass5 => always0.IN1
pass5 => always0.IN0
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
pass6 => always0.IN1
fail1 => always0.IN0
fail1 => always0.IN0
fail1 => always0.IN0
fail1 => always0.IN0
fail1 => always0.IN0
fail1 => always0.IN0
fail2 => always0.IN1
fail2 => always0.IN0
fail2 => always0.IN0
fail2 => always0.IN0
fail2 => always0.IN0
fail2 => always0.IN1
fail3 => always0.IN1
fail3 => always0.IN1
fail3 => always0.IN1
fail3 => always0.IN0
fail3 => always0.IN0
fail3 => always0.IN0
fail3 => always0.IN1
fail4 => always0.IN1
fail4 => always0.IN1
fail4 => always0.IN1
fail4 => always0.IN1
fail4 => always0.IN1
fail4 => always0.IN1
fail4 => always0.IN1
fail4 => always0.IN0
fail4 => always0.IN0
fail4 => always0.IN1
fail5 => always0.IN1
fail5 => always0.IN1
fail5 => always0.IN1
fail5 => always0.IN1
fail5 => always0.IN1
fail5 => always0.IN1
fail5 => always0.IN1
fail5 => always0.IN1
fail5 => always0.IN1
fail5 => always0.IN1
fail5 => always0.IN1
fail5 => always0.IN1
fail5 => always0.IN1
fail5 => always0.IN1
fail5 => always0.IN1
fail5 => always0.IN0
fail5 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
fail6 => always0.IN1
icg => COUNT[6]$latch.LATCH_ENABLE
icg => COUNT[5]$latch.LATCH_ENABLE
icg => COUNT[4]$latch.LATCH_ENABLE
icg => COUNT[2]$latch.LATCH_ENABLE
icg => COUNT[1]$latch.LATCH_ENABLE
icg => COUNT[0]$latch.LATCH_ENABLE
icg => PASS[2].ACLR
icg => PASS[1].ACLR
icg => PASS[0].ACLR
icg => FAIL[2].ACLR
icg => FAIL[1].ACLR
icg => FAIL[0].ACLR
COUNT[0] <= COUNT[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
COUNT[1] <= COUNT[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
COUNT[2] <= COUNT[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
COUNT[3] <= <GND>
COUNT[4] <= COUNT[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
COUNT[5] <= COUNT[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
COUNT[6] <= COUNT[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
COUNT[7] <= <GND>


