|ic_tester
IN1 << logical_function_check:lfc1.IN1
IN2 << logical_function_check:lfc1.IN2
IN3 << logical_function_check:lfc1.IN3
IN4 << logical_function_check:lfc1.IN4
IN5 << logical_function_check:lfc1.IN5
IN6 << logical_function_check:lfc1.IN6
IN8 << logical_function_check:lfc1.IN8
IN9 << logical_function_check:lfc1.IN9
IN10 << logical_function_check:lfc1.IN10
IN11 << logical_function_check:lfc1.IN11
IN12 << logical_function_check:lfc1.IN12
IN13 << logical_function_check:lfc1.IN13
OP1 => OP1.IN1
OP2 => OP2.IN1
OP3 => OP3.IN1
OP4 => OP4.IN1
OP5 => OP5.IN1
OP6 => OP6.IN1
OP8 => OP8.IN1
OP9 => OP9.IN1
OP10 => OP10.IN1
OP11 => OP11.IN1
OP12 => OP12.IN1
OP13 => OP13.IN1
pass1 << logical_function_check:lfc1.pass1
pass2 << logical_function_check:lfc1.pass2
pass3 << logical_function_check:lfc1.pass3
pass4 << logical_function_check:lfc1.pass4
pass5 << logical_function_check:lfc1.pass5
pass6 << logical_function_check:lfc1.pass6
fail1 << logical_function_check:lfc1.fail1
fail2 << logical_function_check:lfc1.fail2
fail3 << logical_function_check:lfc1.fail3
fail4 << logical_function_check:lfc1.fail4
fail5 << logical_function_check:lfc1.fail5
fail6 << logical_function_check:lfc1.fail6
pass << logical_function_check:lfc1.pass
fail << logical_function_check:lfc1.fail
clk => clk.IN1


|ic_tester|logical_function_check:lfc1
IN1 <= IN1~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN2 <= IN2~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN3 <= IN3~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN4 <= IN4~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN5 <= IN5~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN6 <= IN6~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN8 <= IN8~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN9 <= IN9~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN10 <= IN10~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN11 <= IN11~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN12 <= IN12~reg0.DB_MAX_OUTPUT_PORT_TYPE
IN13 <= IN13~reg0.DB_MAX_OUTPUT_PORT_TYPE
OP1 => ~NO_FANOUT~
OP2 => OP2.IN1
OP3 => OP3.IN1
OP4 => OP4.IN1
OP5 => ~NO_FANOUT~
OP6 => OP6.IN4
OP8 => OP8.IN5
OP9 => ~NO_FANOUT~
OP10 => OP10.IN1
OP11 => OP11.IN1
OP12 => OP12.IN2
OP13 => ~NO_FANOUT~
pass1 <= pass1~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass2 <= pass2~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass3 <= pass3~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass4 <= pass4~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass5 <= pass5~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass6 <= pass6~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail1 <= fail1~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail2 <= fail2~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail3 <= fail3~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail4 <= fail4~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail5 <= fail5~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail6 <= fail6~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass <= pass~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail <= fail~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => clk.IN5


|ic_tester|logical_function_check:lfc1|two_input_checker:two_input_checker_inst
A1 <= A1~reg0.DB_MAX_OUTPUT_PORT_TYPE
A2 <= A2~reg0.DB_MAX_OUTPUT_PORT_TYPE
A3 <= A3~reg0.DB_MAX_OUTPUT_PORT_TYPE
A4 <= A4~reg0.DB_MAX_OUTPUT_PORT_TYPE
B1 <= B1~reg0.DB_MAX_OUTPUT_PORT_TYPE
B2 <= B2~reg0.DB_MAX_OUTPUT_PORT_TYPE
B3 <= B3~reg0.DB_MAX_OUTPUT_PORT_TYPE
B4 <= B4~reg0.DB_MAX_OUTPUT_PORT_TYPE
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op4 => output_got4.DATAB
op4 => output_got4.DATAB
op4 => output_got4.DATAB
op4 => output_got4.DATAB
pass1 <= pass1~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass2 <= pass2~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass3 <= pass3~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass4 <= pass4~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail1 <= fail1~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail2 <= fail2~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail3 <= fail3~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail4 <= fail4~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass <= pass~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail <= fail~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => fail~reg0.CLK
clk => pass~reg0.CLK
clk => pass4~reg0.CLK
clk => fail4~reg0.CLK
clk => pass3~reg0.CLK
clk => fail3~reg0.CLK
clk => pass2~reg0.CLK
clk => fail2~reg0.CLK
clk => pass1~reg0.CLK
clk => fail1~reg0.CLK
clk => input_pattern[0].CLK
clk => input_pattern[1].CLK
clk => output_ori[0].CLK
clk => output_ori[1].CLK
clk => output_ori[2].CLK
clk => output_ori[3].CLK
clk => output_got4[0].CLK
clk => output_got4[1].CLK
clk => output_got4[2].CLK
clk => output_got4[3].CLK
clk => output_got3[0].CLK
clk => output_got3[1].CLK
clk => output_got3[2].CLK
clk => output_got3[3].CLK
clk => output_got2[0].CLK
clk => output_got2[1].CLK
clk => output_got2[2].CLK
clk => output_got2[3].CLK
clk => output_got1[0].CLK
clk => output_got1[1].CLK
clk => output_got1[2].CLK
clk => output_got1[3].CLK
clk => B4~reg0.CLK
clk => A4~reg0.CLK
clk => B3~reg0.CLK
clk => A3~reg0.CLK
clk => B2~reg0.CLK
clk => A2~reg0.CLK
clk => B1~reg0.CLK
clk => A1~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
clk => state~1.DATAIN
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => fail2~reg0.ENA
enable => pass2~reg0.ENA
enable => fail3~reg0.ENA
enable => pass3~reg0.ENA
enable => fail4~reg0.ENA
enable => pass4~reg0.ENA
enable => pass~reg0.ENA
enable => fail~reg0.ENA
enable => pass1~reg0.ENA
enable => fail1~reg0.ENA
enable => output_ori[0].ENA
enable => output_ori[1].ENA
enable => output_ori[2].ENA
enable => output_ori[3].ENA
enable => output_got4[0].ENA
enable => output_got4[1].ENA
enable => output_got4[2].ENA
enable => output_got4[3].ENA
enable => output_got3[0].ENA
enable => output_got3[1].ENA
enable => output_got3[2].ENA
enable => output_got3[3].ENA
enable => output_got2[0].ENA
enable => output_got2[1].ENA
enable => output_got2[2].ENA
enable => output_got2[3].ENA
enable => output_got1[0].ENA
enable => output_got1[1].ENA
enable => output_got1[2].ENA
enable => output_got1[3].ENA


|ic_tester|logical_function_check:lfc1|two_input_checker:two_input_checker_inst|two_input_and:and2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|two_input_checker:two_input_checker_inst|two_input_or:or2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|two_input_checker:two_input_checker_inst|two_input_nand:nand2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|two_input_checker:two_input_checker_inst|two_input_nor:nor2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|two_input_checker:two_input_checker_inst|two_input_xor:xor2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|two_input_checker:two_input_checker_inst|two_input_xnor:xnor2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|two_input_checker:two_input_checker_inst|mux_gate:m_gate1
select[0] => Equal0.IN2
select[0] => Equal1.IN0
select[0] => Equal2.IN2
select[0] => Equal3.IN1
select[0] => Equal4.IN2
select[0] => Equal5.IN1
select[1] => Equal0.IN1
select[1] => Equal1.IN2
select[1] => Equal2.IN0
select[1] => Equal3.IN0
select[1] => Equal4.IN1
select[1] => Equal5.IN2
select[2] => Equal0.IN0
select[2] => Equal1.IN1
select[2] => Equal2.IN1
select[2] => Equal3.IN2
select[2] => Equal4.IN0
select[2] => Equal5.IN0
W_AND => Y.DATAB
W_OR => Y.DATAB
W_NAND => Y.DATAB
W_NOR => Y.DATAB
W_XOR => Y.DATAB
W_XNOR => Y.DATAA
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|three_input_checker:three_input_checker_inst
A1 <= A1~reg0.DB_MAX_OUTPUT_PORT_TYPE
A2 <= A2~reg0.DB_MAX_OUTPUT_PORT_TYPE
A3 <= A3~reg0.DB_MAX_OUTPUT_PORT_TYPE
B1 <= B1~reg0.DB_MAX_OUTPUT_PORT_TYPE
B2 <= B2~reg0.DB_MAX_OUTPUT_PORT_TYPE
B3 <= B3~reg0.DB_MAX_OUTPUT_PORT_TYPE
C1 <= C1~reg0.DB_MAX_OUTPUT_PORT_TYPE
C2 <= C2~reg0.DB_MAX_OUTPUT_PORT_TYPE
C3 <= C3~reg0.DB_MAX_OUTPUT_PORT_TYPE
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
op3 => output_got3.DATAB
pass1 <= pass1~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass2 <= pass2~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass3 <= pass3~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail1 <= fail1~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail2 <= fail2~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail3 <= fail3~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass <= pass~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail <= fail~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => fail~reg0.CLK
clk => pass~reg0.CLK
clk => pass3~reg0.CLK
clk => fail3~reg0.CLK
clk => pass2~reg0.CLK
clk => fail2~reg0.CLK
clk => pass1~reg0.CLK
clk => fail1~reg0.CLK
clk => input_pattern[0].CLK
clk => input_pattern[1].CLK
clk => input_pattern[2].CLK
clk => output_ori[0].CLK
clk => output_ori[1].CLK
clk => output_ori[2].CLK
clk => output_ori[3].CLK
clk => output_ori[4].CLK
clk => output_ori[5].CLK
clk => output_ori[6].CLK
clk => output_ori[7].CLK
clk => output_got3[0].CLK
clk => output_got3[1].CLK
clk => output_got3[2].CLK
clk => output_got3[3].CLK
clk => output_got3[4].CLK
clk => output_got3[5].CLK
clk => output_got3[6].CLK
clk => output_got3[7].CLK
clk => output_got2[0].CLK
clk => output_got2[1].CLK
clk => output_got2[2].CLK
clk => output_got2[3].CLK
clk => output_got2[4].CLK
clk => output_got2[5].CLK
clk => output_got2[6].CLK
clk => output_got2[7].CLK
clk => output_got1[0].CLK
clk => output_got1[1].CLK
clk => output_got1[2].CLK
clk => output_got1[3].CLK
clk => output_got1[4].CLK
clk => output_got1[5].CLK
clk => output_got1[6].CLK
clk => output_got1[7].CLK
clk => C3~reg0.CLK
clk => B3~reg0.CLK
clk => A3~reg0.CLK
clk => C2~reg0.CLK
clk => B2~reg0.CLK
clk => A2~reg0.CLK
clk => C1~reg0.CLK
clk => B1~reg0.CLK
clk => A1~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
clk => state~1.DATAIN
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => fail1~reg0.ENA
enable => pass1~reg0.ENA
enable => fail2~reg0.ENA
enable => pass2~reg0.ENA
enable => fail3~reg0.ENA
enable => pass3~reg0.ENA
enable => pass~reg0.ENA
enable => fail~reg0.ENA
enable => output_ori[0].ENA
enable => output_ori[1].ENA
enable => output_ori[2].ENA
enable => output_ori[3].ENA
enable => output_ori[4].ENA
enable => output_ori[5].ENA
enable => output_ori[6].ENA
enable => output_ori[7].ENA
enable => output_got3[0].ENA
enable => output_got3[1].ENA
enable => output_got3[2].ENA
enable => output_got3[3].ENA
enable => output_got3[4].ENA
enable => output_got3[5].ENA
enable => output_got3[6].ENA
enable => output_got3[7].ENA
enable => output_got2[0].ENA
enable => output_got2[1].ENA
enable => output_got2[2].ENA
enable => output_got2[3].ENA
enable => output_got2[4].ENA
enable => output_got2[5].ENA
enable => output_got2[6].ENA
enable => output_got2[7].ENA
enable => output_got1[0].ENA
enable => output_got1[1].ENA
enable => output_got1[2].ENA
enable => output_got1[3].ENA
enable => output_got1[4].ENA
enable => output_got1[5].ENA
enable => output_got1[6].ENA
enable => output_got1[7].ENA


|ic_tester|logical_function_check:lfc1|three_input_checker:three_input_checker_inst|three_input_and:and3
A => Y.IN0
B => Y.IN1
C => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|three_input_checker:three_input_checker_inst|three_input_or:or3
A => Y.IN0
B => Y.IN1
C => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|three_input_checker:three_input_checker_inst|three_input_nand:nand3
A => Y.IN0
B => Y.IN1
C => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|three_input_checker:three_input_checker_inst|three_input_nor:nor3
A => Y.IN0
B => Y.IN1
C => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|three_input_checker:three_input_checker_inst|three_input_xor:xor3
A => Y.IN0
B => Y.IN1
C => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|three_input_checker:three_input_checker_inst|mux_gate:m_gate2
select[0] => Equal0.IN2
select[0] => Equal1.IN0
select[0] => Equal2.IN2
select[0] => Equal3.IN1
select[0] => Equal4.IN2
select[0] => Equal5.IN1
select[1] => Equal0.IN1
select[1] => Equal1.IN2
select[1] => Equal2.IN0
select[1] => Equal3.IN0
select[1] => Equal4.IN1
select[1] => Equal5.IN2
select[2] => Equal0.IN0
select[2] => Equal1.IN1
select[2] => Equal2.IN1
select[2] => Equal3.IN2
select[2] => Equal4.IN0
select[2] => Equal5.IN0
W_AND => Y.DATAB
W_OR => Y.DATAB
W_NAND => Y.DATAB
W_NOR => Y.DATAB
W_XOR => Y.DATAB
W_XNOR => Y.DATAA
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|four_input_checker:four_input_checker_inst
A1 <= A1~reg0.DB_MAX_OUTPUT_PORT_TYPE
A2 <= A2~reg0.DB_MAX_OUTPUT_PORT_TYPE
B1 <= B1~reg0.DB_MAX_OUTPUT_PORT_TYPE
B2 <= B2~reg0.DB_MAX_OUTPUT_PORT_TYPE
C1 <= C1~reg0.DB_MAX_OUTPUT_PORT_TYPE
C2 <= C2~reg0.DB_MAX_OUTPUT_PORT_TYPE
D1 <= D1~reg0.DB_MAX_OUTPUT_PORT_TYPE
D2 <= D2~reg0.DB_MAX_OUTPUT_PORT_TYPE
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
op2 => output_got2.DATAB
pass1 <= pass1~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass2 <= pass2~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail1 <= fail1~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail2 <= fail2~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass <= pass~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail <= fail~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => fail~reg0.CLK
clk => pass~reg0.CLK
clk => pass2~reg0.CLK
clk => fail2~reg0.CLK
clk => pass1~reg0.CLK
clk => fail1~reg0.CLK
clk => input_pattern[0].CLK
clk => input_pattern[1].CLK
clk => input_pattern[2].CLK
clk => input_pattern[3].CLK
clk => output_ori[0].CLK
clk => output_ori[1].CLK
clk => output_ori[2].CLK
clk => output_ori[3].CLK
clk => output_ori[4].CLK
clk => output_ori[5].CLK
clk => output_ori[6].CLK
clk => output_ori[7].CLK
clk => output_ori[8].CLK
clk => output_ori[9].CLK
clk => output_ori[10].CLK
clk => output_ori[11].CLK
clk => output_ori[12].CLK
clk => output_ori[13].CLK
clk => output_ori[14].CLK
clk => output_ori[15].CLK
clk => output_got2[0].CLK
clk => output_got2[1].CLK
clk => output_got2[2].CLK
clk => output_got2[3].CLK
clk => output_got2[4].CLK
clk => output_got2[5].CLK
clk => output_got2[6].CLK
clk => output_got2[7].CLK
clk => output_got2[8].CLK
clk => output_got2[9].CLK
clk => output_got2[10].CLK
clk => output_got2[11].CLK
clk => output_got2[12].CLK
clk => output_got2[13].CLK
clk => output_got2[14].CLK
clk => output_got2[15].CLK
clk => output_got1[0].CLK
clk => output_got1[1].CLK
clk => output_got1[2].CLK
clk => output_got1[3].CLK
clk => output_got1[4].CLK
clk => output_got1[5].CLK
clk => output_got1[6].CLK
clk => output_got1[7].CLK
clk => output_got1[8].CLK
clk => output_got1[9].CLK
clk => output_got1[10].CLK
clk => output_got1[11].CLK
clk => output_got1[12].CLK
clk => output_got1[13].CLK
clk => output_got1[14].CLK
clk => output_got1[15].CLK
clk => D2~reg0.CLK
clk => C2~reg0.CLK
clk => B2~reg0.CLK
clk => A2~reg0.CLK
clk => D1~reg0.CLK
clk => C1~reg0.CLK
clk => B1~reg0.CLK
clk => A1~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
clk => state~1.DATAIN
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => fail1~reg0.ENA
enable => pass1~reg0.ENA
enable => fail2~reg0.ENA
enable => pass2~reg0.ENA
enable => pass~reg0.ENA
enable => fail~reg0.ENA
enable => output_ori[0].ENA
enable => output_ori[1].ENA
enable => output_ori[2].ENA
enable => output_ori[3].ENA
enable => output_ori[4].ENA
enable => output_ori[5].ENA
enable => output_ori[6].ENA
enable => output_ori[7].ENA
enable => output_ori[8].ENA
enable => output_ori[9].ENA
enable => output_ori[10].ENA
enable => output_ori[11].ENA
enable => output_ori[12].ENA
enable => output_ori[13].ENA
enable => output_ori[14].ENA
enable => output_ori[15].ENA
enable => output_got2[0].ENA
enable => output_got2[1].ENA
enable => output_got2[2].ENA
enable => output_got2[3].ENA
enable => output_got2[4].ENA
enable => output_got2[5].ENA
enable => output_got2[6].ENA
enable => output_got2[7].ENA
enable => output_got2[8].ENA
enable => output_got2[9].ENA
enable => output_got2[10].ENA
enable => output_got2[11].ENA
enable => output_got2[12].ENA
enable => output_got2[13].ENA
enable => output_got2[14].ENA
enable => output_got2[15].ENA
enable => output_got1[0].ENA
enable => output_got1[1].ENA
enable => output_got1[2].ENA
enable => output_got1[3].ENA
enable => output_got1[4].ENA
enable => output_got1[5].ENA
enable => output_got1[6].ENA
enable => output_got1[7].ENA
enable => output_got1[8].ENA
enable => output_got1[9].ENA
enable => output_got1[10].ENA
enable => output_got1[11].ENA
enable => output_got1[12].ENA
enable => output_got1[13].ENA
enable => output_got1[14].ENA
enable => output_got1[15].ENA


|ic_tester|logical_function_check:lfc1|four_input_checker:four_input_checker_inst|four_input_and:and3
A => Y.IN0
B => Y.IN1
C => Y.IN1
D => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|four_input_checker:four_input_checker_inst|four_input_nand:nand3
A => Y.IN0
B => Y.IN1
C => Y.IN1
D => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|four_input_checker:four_input_checker_inst|mux_gate:m_gate3
select[0] => Equal0.IN2
select[0] => Equal1.IN0
select[0] => Equal2.IN2
select[0] => Equal3.IN1
select[0] => Equal4.IN2
select[0] => Equal5.IN1
select[1] => Equal0.IN1
select[1] => Equal1.IN2
select[1] => Equal2.IN0
select[1] => Equal3.IN0
select[1] => Equal4.IN1
select[1] => Equal5.IN2
select[2] => Equal0.IN0
select[2] => Equal1.IN1
select[2] => Equal2.IN1
select[2] => Equal3.IN2
select[2] => Equal4.IN0
select[2] => Equal5.IN0
W_AND => Y.DATAB
W_OR => Y.DATAB
W_NAND => Y.DATAB
W_NOR => Y.DATAB
W_XOR => Y.DATAB
W_XNOR => Y.DATAA
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|eight_input_checker:eight_input_checker_inst
A1 <= A1~reg0.DB_MAX_OUTPUT_PORT_TYPE
B1 <= B1~reg0.DB_MAX_OUTPUT_PORT_TYPE
C1 <= C1~reg0.DB_MAX_OUTPUT_PORT_TYPE
D1 <= D1~reg0.DB_MAX_OUTPUT_PORT_TYPE
E1 <= E1~reg0.DB_MAX_OUTPUT_PORT_TYPE
F1 <= F1~reg0.DB_MAX_OUTPUT_PORT_TYPE
G1 <= G1~reg0.DB_MAX_OUTPUT_PORT_TYPE
H1 <= H1~reg0.DB_MAX_OUTPUT_PORT_TYPE
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
op1 => output_got1.DATAB
pass1 <= pass1~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail1 <= fail1~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass <= pass~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail <= fail~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => fail~reg0.CLK
clk => pass~reg0.CLK
clk => pass1~reg0.CLK
clk => fail1~reg0.CLK
clk => input_pattern[0].CLK
clk => input_pattern[1].CLK
clk => input_pattern[2].CLK
clk => input_pattern[3].CLK
clk => input_pattern[4].CLK
clk => input_pattern[5].CLK
clk => input_pattern[6].CLK
clk => input_pattern[7].CLK
clk => output_ori[0].CLK
clk => output_ori[1].CLK
clk => output_ori[2].CLK
clk => output_ori[3].CLK
clk => output_ori[4].CLK
clk => output_ori[5].CLK
clk => output_ori[6].CLK
clk => output_ori[7].CLK
clk => output_ori[8].CLK
clk => output_ori[9].CLK
clk => output_ori[10].CLK
clk => output_ori[11].CLK
clk => output_ori[12].CLK
clk => output_ori[13].CLK
clk => output_ori[14].CLK
clk => output_ori[15].CLK
clk => output_ori[16].CLK
clk => output_ori[17].CLK
clk => output_ori[18].CLK
clk => output_ori[19].CLK
clk => output_ori[20].CLK
clk => output_ori[21].CLK
clk => output_ori[22].CLK
clk => output_ori[23].CLK
clk => output_ori[24].CLK
clk => output_ori[25].CLK
clk => output_ori[26].CLK
clk => output_ori[27].CLK
clk => output_ori[28].CLK
clk => output_ori[29].CLK
clk => output_ori[30].CLK
clk => output_ori[31].CLK
clk => output_got1[0].CLK
clk => output_got1[1].CLK
clk => output_got1[2].CLK
clk => output_got1[3].CLK
clk => output_got1[4].CLK
clk => output_got1[5].CLK
clk => output_got1[6].CLK
clk => output_got1[7].CLK
clk => output_got1[8].CLK
clk => output_got1[9].CLK
clk => output_got1[10].CLK
clk => output_got1[11].CLK
clk => output_got1[12].CLK
clk => output_got1[13].CLK
clk => output_got1[14].CLK
clk => output_got1[15].CLK
clk => output_got1[16].CLK
clk => output_got1[17].CLK
clk => output_got1[18].CLK
clk => output_got1[19].CLK
clk => output_got1[20].CLK
clk => output_got1[21].CLK
clk => output_got1[22].CLK
clk => output_got1[23].CLK
clk => output_got1[24].CLK
clk => output_got1[25].CLK
clk => output_got1[26].CLK
clk => output_got1[27].CLK
clk => output_got1[28].CLK
clk => output_got1[29].CLK
clk => output_got1[30].CLK
clk => output_got1[31].CLK
clk => H1~reg0.CLK
clk => G1~reg0.CLK
clk => F1~reg0.CLK
clk => E1~reg0.CLK
clk => D1~reg0.CLK
clk => C1~reg0.CLK
clk => B1~reg0.CLK
clk => A1~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
clk => state~1.DATAIN
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => input_pattern.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => state.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => fail1~reg0.ENA
enable => pass1~reg0.ENA
enable => pass~reg0.ENA
enable => fail~reg0.ENA
enable => output_ori[0].ENA
enable => output_ori[1].ENA
enable => output_ori[2].ENA
enable => output_ori[3].ENA
enable => output_ori[4].ENA
enable => output_ori[5].ENA
enable => output_ori[6].ENA
enable => output_ori[7].ENA
enable => output_ori[8].ENA
enable => output_ori[9].ENA
enable => output_ori[10].ENA
enable => output_ori[11].ENA
enable => output_ori[12].ENA
enable => output_ori[13].ENA
enable => output_ori[14].ENA
enable => output_ori[15].ENA
enable => output_ori[16].ENA
enable => output_ori[17].ENA
enable => output_ori[18].ENA
enable => output_ori[19].ENA
enable => output_ori[20].ENA
enable => output_ori[21].ENA
enable => output_ori[22].ENA
enable => output_ori[23].ENA
enable => output_ori[24].ENA
enable => output_ori[25].ENA
enable => output_ori[26].ENA
enable => output_ori[27].ENA
enable => output_ori[28].ENA
enable => output_ori[29].ENA
enable => output_ori[30].ENA
enable => output_ori[31].ENA
enable => output_got1[0].ENA
enable => output_got1[1].ENA
enable => output_got1[2].ENA
enable => output_got1[3].ENA
enable => output_got1[4].ENA
enable => output_got1[5].ENA
enable => output_got1[6].ENA
enable => output_got1[7].ENA
enable => output_got1[8].ENA
enable => output_got1[9].ENA
enable => output_got1[10].ENA
enable => output_got1[11].ENA
enable => output_got1[12].ENA
enable => output_got1[13].ENA
enable => output_got1[14].ENA
enable => output_got1[15].ENA
enable => output_got1[16].ENA
enable => output_got1[17].ENA
enable => output_got1[18].ENA
enable => output_got1[19].ENA
enable => output_got1[20].ENA
enable => output_got1[21].ENA
enable => output_got1[22].ENA
enable => output_got1[23].ENA
enable => output_got1[24].ENA
enable => output_got1[25].ENA
enable => output_got1[26].ENA
enable => output_got1[27].ENA
enable => output_got1[28].ENA
enable => output_got1[29].ENA
enable => output_got1[30].ENA
enable => output_got1[31].ENA


|ic_tester|logical_function_check:lfc1|eight_input_checker:eight_input_checker_inst|eight_input_nand:nand3
A => Y.IN0
B => Y.IN1
C => Y.IN1
D => Y.IN1
E => Y.IN1
F => Y.IN1
G => Y.IN1
H => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|eight_input_checker:eight_input_checker_inst|mux_gate:m_gate2
select[0] => Equal0.IN2
select[0] => Equal1.IN0
select[0] => Equal2.IN2
select[0] => Equal3.IN1
select[0] => Equal4.IN2
select[0] => Equal5.IN1
select[1] => Equal0.IN1
select[1] => Equal1.IN2
select[1] => Equal2.IN0
select[1] => Equal3.IN0
select[1] => Equal4.IN1
select[1] => Equal5.IN2
select[2] => Equal0.IN0
select[2] => Equal1.IN1
select[2] => Equal2.IN1
select[2] => Equal3.IN2
select[2] => Equal4.IN0
select[2] => Equal5.IN0
W_AND => Y.DATAB
W_OR => Y.DATAB
W_NAND => Y.DATAB
W_NOR => Y.DATAB
W_XOR => Y.DATAB
W_XNOR => Y.DATAA
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ic_tester|logical_function_check:lfc1|not_gate_checker:not_gate_checker_inst
A1 <= A1~reg0.DB_MAX_OUTPUT_PORT_TYPE
A2 <= A2~reg0.DB_MAX_OUTPUT_PORT_TYPE
A3 <= A3~reg0.DB_MAX_OUTPUT_PORT_TYPE
A4 <= A4~reg0.DB_MAX_OUTPUT_PORT_TYPE
A5 <= A5~reg0.DB_MAX_OUTPUT_PORT_TYPE
A6 <= A6~reg0.DB_MAX_OUTPUT_PORT_TYPE
op1 => output_got1.DATAB
op1 => output_got1.DATAA
op2 => output_got2.DATAB
op2 => output_got2.DATAA
op3 => output_got3.DATAB
op3 => output_got3.DATAA
op4 => output_got4.DATAB
op4 => output_got4.DATAA
op4 => output_got5.DATAA
op4 => output_got6.DATAA
op5 => output_got5.DATAB
op6 => output_got6.DATAB
pass1 <= pass1~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass2 <= pass2~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass3 <= pass3~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass4 <= pass4~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass5 <= pass5~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass6 <= pass6~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail1 <= fail1~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail2 <= fail2~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail3 <= fail3~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail4 <= fail4~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail5 <= fail5~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail6 <= fail6~reg0.DB_MAX_OUTPUT_PORT_TYPE
pass <= pass~reg0.DB_MAX_OUTPUT_PORT_TYPE
fail <= fail~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => state.CLK
clk => input_pattern.CLK
clk => fail~reg0.CLK
clk => pass~reg0.CLK
clk => pass6~reg0.CLK
clk => fail6~reg0.CLK
clk => pass5~reg0.CLK
clk => fail5~reg0.CLK
clk => pass4~reg0.CLK
clk => fail4~reg0.CLK
clk => pass3~reg0.CLK
clk => fail3~reg0.CLK
clk => pass2~reg0.CLK
clk => fail2~reg0.CLK
clk => pass1~reg0.CLK
clk => fail1~reg0.CLK
clk => output_ori[0].CLK
clk => output_ori[1].CLK
clk => output_got6[0].CLK
clk => output_got6[1].CLK
clk => output_got5[0].CLK
clk => output_got5[1].CLK
clk => output_got4[0].CLK
clk => output_got4[1].CLK
clk => output_got3[0].CLK
clk => output_got3[1].CLK
clk => output_got2[0].CLK
clk => output_got2[1].CLK
clk => output_got1[0].CLK
clk => output_got1[1].CLK
clk => A6~reg0.CLK
clk => A5~reg0.CLK
clk => A4~reg0.CLK
clk => A3~reg0.CLK
clk => A2~reg0.CLK
clk => A1~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
enable => input_pattern.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => counter.OUTPUTSELECT
enable => fail6~reg0.ENA
enable => pass6~reg0.ENA
enable => pass~reg0.ENA
enable => fail~reg0.ENA
enable => state.ENA
enable => pass5~reg0.ENA
enable => fail5~reg0.ENA
enable => pass4~reg0.ENA
enable => fail4~reg0.ENA
enable => pass3~reg0.ENA
enable => fail3~reg0.ENA
enable => pass2~reg0.ENA
enable => fail2~reg0.ENA
enable => pass1~reg0.ENA
enable => fail1~reg0.ENA
enable => output_ori[0].ENA
enable => output_ori[1].ENA
enable => output_got6[0].ENA
enable => output_got6[1].ENA
enable => output_got5[0].ENA
enable => output_got5[1].ENA
enable => output_got4[0].ENA
enable => output_got4[1].ENA
enable => output_got3[0].ENA
enable => output_got3[1].ENA
enable => output_got2[0].ENA
enable => output_got2[1].ENA
enable => output_got1[0].ENA
enable => output_got1[1].ENA


|ic_tester|logical_function_check:lfc1|not_gate_checker:not_gate_checker_inst|not_gate:not_gate
A => Y.DATAIN
Y <= A.DB_MAX_OUTPUT_PORT_TYPE


